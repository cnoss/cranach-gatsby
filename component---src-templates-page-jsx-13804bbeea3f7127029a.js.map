{"version":3,"sources":["webpack:///./src/components/atoms/zoom-image/index.js","webpack:///./src/components/atoms/zoom-image/zoom-image.jsx","webpack:///./src/components/atoms/definition-list/definition-list.jsx","webpack:///./src/components/atoms/definition-list/index.js","webpack:///./src/templates/page.jsx"],"names":["ZoomImage","src","baseSrc","alt","caption","figureElRef","useRef","useState","activeZoom","setActiveZoom","ref","className","data-component","onLoad","window","document","then","OpenSeaDragon","Viewer","element","current","tileSources","type","url","prefixUrl","withPrefix","navImages","zoomIn","REST","GROUP","HOVER","DOWN","zoomOut","home","fullpage","addHandler","DefinitionList","children","Entry","term","definition","Fragment","PageTemplate","graphic","pageContext","inventor","involvedPersons","find","person","role","title","titles","subtitle","name","description","classification","dating","dimensions","inventoryNumber","objectName","data-template","image","xlarge","small","dated"],"mappings":"6KAGeA,G,OCEA,YAKR,IAJLC,EAII,EAJJA,IACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,IACAC,EACI,EADJA,QAEMC,EAAcC,iBAAO,MADvB,EAEgCC,oBAAS,GAAtCC,EAFH,KAEeC,EAFf,KAsDJ,OACE,4BACEC,IAAML,EACNM,UAAS,eAAiBH,EAAa,kBAAoB,IAC3DI,iBAAe,oBAEf,yBACED,UAAU,gBACVV,IAAMC,EACNC,IAAMA,EACNU,OA5DkB,WAIjBC,QAAWA,OAAOC,UAIvB,kCAAwBC,MAAK,SAACC,GACb,IAAIA,EAAcC,OAAO,CACtCC,QAASd,EAAYe,QACrBC,YAAa,CACXC,KAAM,QACNC,IAAKtB,GAEPuB,UAAWC,YAAW,YACtBC,UAAW,CACTC,OAAQ,CACNC,KAAM,kBACNC,MAAO,mBACPC,MAAO,mBACPC,KAAM,oBAERC,QAAS,CACPJ,KAAM,mBACNC,MAAO,oBACPC,MAAO,oBACPC,KAAM,qBAERE,KAAM,CACJL,KAAM,gBACNC,MAAO,iBACPC,MAAO,iBACPC,KAAM,kBAERG,SAAU,CACRN,KAAM,oBACNC,MAAO,qBACPC,MAAO,qBACPC,KAAM,yBAKLI,WAAW,QAAQ,WACxB1B,GAAc,YAkBdL,GAAW,oCACPA,MC1ENgC,G,OAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACrB,wBACE1B,UAAU,kBACVC,iBAAe,yBAEbyB,KAIND,EAAeE,MAAQ,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,WAAT,OACrB,kBAAC,IAAMC,SAAP,KACE,wBAAI9B,UAAU,QAAS4B,GACvB,wBAAI5B,UAAU,cAAe6B,KAIlBJ,IClBAA,EDkBAA,EEuEAM,UAjFM,SAAC,GAAqB,IACnCC,EADkC,EAAlBC,YAGhBC,EAAWF,EAAQG,gBAAgBC,MAAK,SAAAC,GAAM,MAAoB,aAAhBA,EAAOC,QAEzDC,EAASP,EAAQQ,OAAO,IAAMR,EAAQQ,OAAO,GAAGD,OAAU,GAC1DE,EAAWP,EAAWA,EAASQ,KAAO,IACtCC,EAAcX,EAAQW,aAAe,IAGzCC,EAKEZ,EALFY,eACAC,EAIEb,EAJFa,OACAC,EAGEd,EAHFc,WACAC,EAEEf,EAFFe,gBACAC,EACEhB,EADFgB,WAGF,OACE,yBACEhD,UAAU,OACViD,gBAAc,QAEd,kBAAC,IAAD,KACE,6CAAoBV,IAGtB,kBAAC,IAAD,MAEA,yBAAKvC,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,CACEV,IAAM0C,EAAQkB,MAAMC,OACpB5D,QAAUyC,EAAQkB,MAAME,MACxB5D,IAAM+C,KAIV,yBAAKvC,UAAU,UACb,wBAAIA,UAAU,SAAUuC,GACxB,wBAAIvC,UAAU,YAAayC,GAE3B,yBAAKzC,UAAU,WACX2C,GAGJ,yBAAK3C,UAAU,WACb,kBAAC,EAAD,KACE,kBAAC,EAAe2B,MAAhB,CACEC,KAAK,iBACLC,WAAae,EAAeA,iBAG9B,kBAAC,EAAejB,MAAhB,CACEC,KAAK,UACLC,WAAagB,EAAOQ,QAGtB,kBAAC,EAAe1B,MAAhB,CACEC,KAAK,OACLC,WAAaiB,IAGf,kBAAC,EAAenB,MAAhB,CACEC,KAAK,iBACLC,WAAakB,IAGf,kBAAC,EAAepB,MAAhB,CACEC,KAAK,aACLC,WAAamB","file":"component---src-templates-page-jsx-13804bbeea3f7127029a.js","sourcesContent":["\nimport ZoomImage from './zoom-image';\n\nexport default ZoomImage;\n","import React, { useState, useRef } from 'react';\nimport { withPrefix } from 'gatsby';\n\nimport './zoom-image.scss';\n\nexport default ({\n  src,\n  baseSrc,\n  alt,\n  caption,\n}) => {\n  const figureElRef = useRef(null);\n  const [activeZoom, setActiveZoom] = useState(false);\n\n  const baseImageLoaded = () => {\n    /* OpenSeaDragon references 'document',\n      so we have to skip the import to prevent an error\n      while building the site */\n    if (!window || !window.document) {\n      return;\n    }\n\n    import('openseadragon').then((OpenSeaDragon) => {\n      const viewer = new OpenSeaDragon.Viewer({\n        element: figureElRef.current,\n        tileSources: {\n          type: 'image',\n          url: src,\n        },\n        prefixUrl: withPrefix('/images/'),\n        navImages: {\n          zoomIn: {\n            REST: 'zoomin_rest.png',\n            GROUP: 'zoomin_hover.png',\n            HOVER: 'zoomin_hover.png',\n            DOWN: 'zoomin_hover.png',\n          },\n          zoomOut: {\n            REST: 'zoomout_rest.png',\n            GROUP: 'zoomout_hover.png',\n            HOVER: 'zoomout_hover.png',\n            DOWN: 'zoomout_hover.png',\n          },\n          home: {\n            REST: 'home_rest.png',\n            GROUP: 'home_hover.png',\n            HOVER: 'home_hover.png',\n            DOWN: 'home_hover.png',\n          },\n          fullpage: {\n            REST: 'fullpage_rest.png',\n            GROUP: 'fullpage_hover.png',\n            HOVER: 'fullpage_hover.png',\n            DOWN: 'fullpage_hover.png',\n          },\n        },\n      });\n\n      viewer.addHandler('open', () => {\n        setActiveZoom(true);\n      });\n    });\n  };\n\n  return (\n    <figure\n      ref={ figureElRef }\n      className={ `zoom-image ${activeZoom ? 'has-active-zoom' : ''}` }\n      data-component=\"atoms/zoom-image\"\n    >\n      <img\n        className=\"preload-image\"\n        src={ baseSrc }\n        alt={ alt }\n        onLoad={ baseImageLoaded }\n      ></img>\n\n      { caption && <figcaption>\n          { caption }\n        </figcaption>\n      }\n    </figure>\n  );\n};\n","import React from 'react';\n\nimport './definition-list.scss';\n\nconst DefinitionList = ({ children }) => (\n  <dl\n    className=\"definition-list\"\n    data-component=\"atoms/definition-list\"\n  >\n    { children }\n  </dl>\n);\n\nDefinitionList.Entry = ({ term, definition }) => (\n  <React.Fragment>\n    <dt className=\"term\">{ term }</dt>\n    <dd className=\"definition\">{ definition }</dd>\n  </React.Fragment>\n);\n\nexport default DefinitionList;\n","import DefinitionList from './definition-list';\n\nexport default DefinitionList;\n","// src/templates/page.js\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nimport Navigation from '~/components/molecules/navigation';\nimport ZoomImage from '~/components/atoms/zoom-image';\nimport DefinitionList from '~/components/atoms/definition-list';\n\n\nconst PageTemplate = ({ pageContext }) => {\n  const graphic = pageContext;\n\n  const inventor = graphic.involvedPersons.find(person => person.role === 'Inventor');\n\n  const title = (graphic.titles[0] && graphic.titles[0].title) || '';\n  const subtitle = inventor ? inventor.name : ' ';\n  const description = graphic.description || ' ';\n\n  const {\n    classification,\n    dating,\n    dimensions,\n    inventoryNumber,\n    objectName,\n  } = graphic;\n\n  return (\n    <div\n      className=\"page\"\n      data-template=\"page\"\n    >\n      <Helmet>\n        <title>Grafiken | { title }</title>\n      </Helmet>\n\n      <Navigation />\n\n      <div className=\"container\">\n        <div className=\"columns\">\n          <div className=\"column\">\n            <ZoomImage\n              src={ graphic.image.xlarge }\n              baseSrc={ graphic.image.small }\n              alt={ title }\n            />\n          </div>\n\n          <div className=\"column\">\n            <h1 className=\"title\">{ title }</h1>\n            <h2 className=\"subtitle\">{ subtitle }</h2>\n\n            <div className=\"content\">\n              { description }\n            </div>\n\n            <div className=\"content\">\n              <DefinitionList>\n                <DefinitionList.Entry\n                  term=\"Klassifikation\"\n                  definition={ classification.classification }\n                />\n\n                <DefinitionList.Entry\n                  term=\"Datiert\"\n                  definition={ dating.dated }\n                />\n\n                <DefinitionList.Entry\n                  term=\"MaÃŸe\"\n                  definition={ dimensions }\n                />\n\n                <DefinitionList.Entry\n                  term=\"Inventarnummer\"\n                  definition={ inventoryNumber }\n                />\n\n                <DefinitionList.Entry\n                  term=\"Objektname\"\n                  definition={ objectName }\n                />\n              </DefinitionList>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageTemplate;\n"],"sourceRoot":""}