{"version":3,"sources":["webpack:///./src/components/molecules/involved-persons-list/index.js","webpack:///./src/components/molecules/involved-persons-list/involved-persons-list.jsx","webpack:///./src/components/organisms/leporello-graphic-details-item/index.js","webpack:///./src/components/organisms/leporello-graphic-details-item/leporello-graphic-details-item.jsx","webpack:///./src/components/molecules/graphics-list/index.js","webpack:///./src/components/molecules/graphics-list/graphics-list.jsx","webpack:///./src/components/organisms/leporello-graphic-reprints-item/index.js","webpack:///./src/components/organisms/leporello-graphic-reprints-item/leporello-graphic-reprints-item.jsx","webpack:///./src/components/organisms/leporello-artefact-related-works-item/index.js","webpack:///./src/components/organisms/leporello-artefact-related-works-item/leporello-artefact-related-works-item.jsx","webpack:///./src/templates/virtual-object-page.jsx"],"names":["InvolvedPersonsTable","data","items","map","item","idx","className","key","alternativeName","role","remarks","LeporelloGraphicDetailsItem","location","graphic","visibleCloser","initiallyOpen","t","useTranslation","translations","title","titles","description","representativeImage","dating","dimensions","involvedPersons","inventoryNumber","signature","catalogWorkReferences","publications","classification","sortingWeight","name","pos","getPatternPos","str","foundSortingWeight","find","sw","Number","MAX_SAFE_INTEGER","catalogWorkReferenceItems","sort","a","b","reference","term","catalogWorkReferenceName","definition","referenceNumber","useState","additionalClassNames","setAdditionalClassNames","isOpen","setIsOpen","useEffect","split","repImageSrc","medium","src","join","data-component","onToggle","visibleToggler","closerType","alt","printProcess","text","Entry","dated","length","GraphicsList","onItemClick","to","triggersInternalTransition","onClick","e","preventLinkFollowing","preventDefault","imgSrc","classNamePrefix","caption","modifierWithBox","LeporelloGraphicReprintsItem","reprints","limitItemsTo","reprintItems","reprintItem","ref","smallestImageSrc","small","owner","metadata","langCode","slug","conditionLevel","limitReprintItems","setLimitReprintItems","innerHandleItemClick","foundSelectedItem","refItem","reprintConditionLevelGroups","id","subtitle","filter","reprintRefItem","includes","conditionLevelGroup","group","atLeastOneGroupHasMoreReprintItemsThanLimit","some","reprintGroup","slice","LeporelloArtefactRelatedWorksItem","relatedWorks","relatedWorkItemsLimit","hasMoreRelatedWorkItemsThanLimit","relatedWorksItems","relatedWorksItem","limitRelatedWorkItems","setLimitRelatedWorkItems","PageTemplate","pageContext","navigate","i18n","selectedReprintItem","setSelectedReprintItem","hash","references","selectedReprintInventoryNumber","matchingReprint","reprint","activeReprintElement","document","querySelector","setTimeout","scrollIntoView","reprintItemSelector","reprintRef","pathname","replace","goBackTo","search","reduce","acc","param","value","decodeURIComponent","back","data-template","href","onClose"],"mappings":"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","file":"component---src-templates-virtual-object-page-jsx-53c8eef02e2694435669.js","sourcesContent":["import InvolvedPersonsTable from './involved-persons-list';\n\nexport default InvolvedPersonsTable;\n","import React from 'react';\n\nimport './involved-persons-list.scss';\n\nexport default ({\n  data = [],\n}) => {\n  const items = data.map(\n    (item, idx) => (\n      <li className=\"involved-persons-list__item\" key={idx}>\n        {item.alternativeName}, {item.role} {(item.remarks) ? <span className=\"remarks\">{item.remarks}</span> : ''}\n      </li>\n    ),\n  );\n  return (\n    <ul\n      className=\"involved-persons-list\">\n      {items}\n    </ul>);\n};\n","import LeporelloGraphicDetailsItem from './leporello-graphic-details-item';\n\nexport default LeporelloGraphicDetailsItem;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from '~/i18n';\n\nimport LeporelloGraphicItem from '~/components/molecules/leporello-graphic-item';\nimport DefinitionList from '~/components/atoms/definition-list';\nimport InvolvedPersonsList from '~/components/molecules/involved-persons-list';\nimport LiteratureTable from '~/components/molecules/literature-table';\nimport CopyText from '~/components/atoms/copy-text';\nimport Image from '~/components/atoms/image';\n\nimport translations from './translations.json';\nimport './leporello-graphic-details-item.scss';\n\nexport default ({\n  location,\n  graphic,\n  visibleCloser = true,\n  initiallyOpen = false,\n  className = '',\n}) => {\n  const { t } = useTranslation('LeporelloGraphicDetailsItem', translations);\n\n  /* Prepare main and important object infos for usage */\n  // const inventor = graphic.involvedPersons.find(person => person.role === 'Inventor');\n\n  const title = (graphic.titles[0] && graphic.titles[0].title) || '';\n  // const subtitle = inventor ? inventor.name : ' ';\n  const description = graphic.description || ' ';\n\n  const {\n    representativeImage,\n    dating,\n    dimensions,\n    involvedPersons,\n    inventoryNumber,\n    signature,\n    catalogWorkReferences,\n    publications,\n    classification,\n  } = graphic;\n\n  /* Sorting catalogWorkReferences */\n  const sortingWeight = [\n    {\n      name: 'Bartsch',\n      pos: 1,\n    },\n    {\n      name: 'Hollstein',\n      pos: 2,\n    },\n    {\n      name: 'GND',\n      pos: 3,\n    },\n  ];\n  const getPatternPos = (str) => {\n    const foundSortingWeight = sortingWeight.find((sw) => str === sw.name);\n\n    return foundSortingWeight ? foundSortingWeight.pos : Number.MAX_SAFE_INTEGER;\n  };\n  const sortedCatalogWorkReferences = catalogWorkReferences.sort(\n    (a, b) => getPatternPos(b.description) - getPatternPos(a.description),\n  );\n\n  /* Map catalog work references */\n  const catalogWorkReferenceItems = sortedCatalogWorkReferences.map(\n    (reference) => ({\n      term: t('{{catalogWorkReferenceName}}-No', { catalogWorkReferenceName: reference.description }),\n      definition: reference.referenceNumber,\n    }),\n  );\n\n  const [additionalClassNames, setAdditionalClassNames] = useState([]);\n  const [isOpen, setIsOpen] = useState(!!initiallyOpen);\n\n  /* React on isOpen change */\n  useEffect(() => {\n    setIsOpen(!!initiallyOpen);\n  }, [initiallyOpen]);\n\n  /* React on additional classnames change and open / close toggle */\n  useEffect(() => {\n    setAdditionalClassNames([\n      ...className.split(' '),\n      /*\n        We add an extra classname, if the leporello item was opened,\n        to be able to react to it on style level\n      */\n      ...(isOpen ? ['-is-open'] : []),\n    ]);\n  }, [className, isOpen]);\n\n  const repImageSrc = representativeImage.medium.src;\n\n  return (\n    <LeporelloGraphicItem\n      className={`leporello-graphic-details-item-wrap ${additionalClassNames.join(' ')}`}\n      data-component=\"organisms/leporello-graphic-details-item\"\n      initiallyOpen={isOpen}\n      onToggle={setIsOpen}\n      visibleToggler={visibleCloser}\n      closerType=\"with-cover\"\n    >\n      <div className={`leporello-graphic-details-item ${additionalClassNames.join(' ')}`}>\n        <header className=\"leporello-graphic-details-item__header\">\n          <h2 className=\"chapter\">{t('Master Data')}</h2>\n        </header>\n\n        <div className=\"leporello-graphic-details-item__content\">\n          <div className={'leporello-graphic-details-item__content-image'}>\n            <Image\n              src={repImageSrc}\n              alt={title}\n            />\n          </div>\n          <div className=\"leporello-graphic-details-item__content-info\">\n            <header className=\"leporello-graphic-details-item__content-info-header\">\n              <h1 className=\"title\">{title}</h1>\n              <h2 className=\"subtitle\">\n                {classification.classification}, {classification.printProcess}\n              </h2>\n            </header>\n            <div className=\"leporello-graphic-details-item__content-info-content\">\n              <div className=\"column\">\n                <CopyText\n                  text={description}\n                />\n              </div>\n\n              <div className=\"column\">\n                <DefinitionList>\n                  <DefinitionList.Entry\n                    term={t('Attribution')}\n                    definition={<InvolvedPersonsList data={involvedPersons} />}\n                  />\n                  <DefinitionList.Entry\n                    term={t('Production date')}\n                    definition={`${dating.dated} ${dating.remarks}`}\n                  />\n                  <DefinitionList.Entry\n                    term={t('Dimensions')}\n                    definition={dimensions}\n                  />\n                  {signature && <DefinitionList.Entry\n                    term={t('Signature')}\n                    definition={signature}\n                  />\n                  }\n\n                  {\n                    catalogWorkReferenceItems.map(\n                      (item) => (\n                        <DefinitionList.Entry\n                          key={item.term}\n                          term={item.term}\n                          definition={item.definition}\n                        />\n                      ),\n                    )\n                  }\n\n                  <DefinitionList.Entry\n                    term=\"CDA ID\"\n                    definition={inventoryNumber}\n                  />\n                  <DefinitionList.Entry\n                    term={t('Persistent Link')}\n                    definition={location}\n                  />\n\n                </DefinitionList>\n\n                {publications.length > 0\n                  && <DefinitionList>\n                    <DefinitionList.Entry\n                      term={t('Literature')}\n                      definition={<LiteratureTable data={publications} />}\n                    />\n                  </DefinitionList>\n                }\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </LeporelloGraphicItem>\n  );\n};\n","import GraphicsList from './graphics-list';\n\nexport default GraphicsList;\n","import React from 'react';\n\nimport Link from '~/components/atoms/link';\nimport Image from '~/components/atoms/image';\n\nimport './graphics-list.scss';\n\nexport default ({\n  items,\n  onItemClick,\n}) => (\n    <ul\n      className=\"graphics-list\"\n      data-component=\"molecules/graphics-list\"\n    >\n      {\n        items.map(\n          (item) => <li\n            key={item.inventoryNumber}\n            className=\"graphics-list-item\"\n          >\n\n            <Link\n              to={item.to}\n              triggersInternalTransition={!!item.triggersInternalTransition}\n              onClick={(e) => {\n                if (item.preventLinkFollowing) {\n                  if ((typeof onItemClick) === 'function') {\n                    onItemClick(item);\n                  }\n                  e.preventDefault();\n                  return false;\n                }\n\n                return true;\n              }}\n            >\n              <Image\n                src={item.imgSrc}\n                alt={item.title}\n                classNamePrefix={'graphics-list-item__image'}\n                caption={item.title}\n                modifierWithBox={true}\n              />\n            </Link>\n          </li>,\n        )\n    }\n  </ul >);\n","import LeporelloGraphicReprintsItem from './leporello-graphic-reprints-item';\n\nexport default LeporelloGraphicReprintsItem;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from '~/i18n';\n\nimport LeporelloGraphicItem from '~/components/molecules/leporello-graphic-item';\nimport GraphicsList from '~/components/molecules/graphics-list';\n\nimport translations from './translations.json';\nimport './leporello-graphic-reprints-item.scss';\n\nexport default ({\n  reprints,\n  className = '',\n  onItemClick = () => {},\n  limitItemsTo = 5,\n}) => {\n  const { t } = useTranslation('LeporelloGraphicReprintsItem', translations);\n\n  /* Map reprints */\n  const reprintItems = reprints.map((reprintItem) => {\n    const item = reprintItem.ref;\n\n    const smallestImageSrc = item.representativeImage.small.src;\n\n    return {\n      inventoryNumber: item.inventoryNumber,\n      title: [item.dating.dated, ', ', item.owner],\n      to: `/${item.metadata.langCode}/${item.slug}`,\n      imgSrc: smallestImageSrc,\n      preventLinkFollowing: true,\n      conditionLevel: item.conditionLevel,\n    };\n  });\n\n  const [additionalClassNames, setAdditionalClassNames] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [limitReprintItems, setLimitReprintItems] = useState(!isOpen);\n\n  /* React on additional classnames changes */\n  useEffect(() => {\n    setAdditionalClassNames([\n      ...className.split(' '),\n    ]);\n  }, [className, isOpen]);\n\n  /* React on open / close toggle */\n  useEffect(() => {\n    setLimitReprintItems(!isOpen);\n  }, [isOpen]);\n\n  const innerHandleItemClick = (item) => {\n    const foundSelectedItem = reprints.find(\n      (refItem) => refItem.inventoryNumber === item.inventoryNumber,\n    );\n\n    if (foundSelectedItem && (typeof onItemClick) === 'function') {\n      onItemClick(foundSelectedItem.ref);\n    }\n  };\n\n  const expectedReprintConditionLevelGroups = [\n    {\n      id: '1st-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '1st state',\n        description: '1st state description',\n      },\n      filter: (reprintRefItem) => reprintRefItem && [0, 1].includes(reprintRefItem.conditionLevel),\n      items: [],\n    },\n    {\n      id: '2nd-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '2nd state',\n        description: '2nd state description',\n      },\n      filter: (reprintRefItem) => reprintRefItem && reprintRefItem.conditionLevel === 2,\n      items: [],\n    },\n    {\n      id: '3rd-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '3rd state',\n        description: '3rd state description',\n      },\n      filter: (reprintRefItem) => reprintRefItem && reprintRefItem.conditionLevel === 3,\n      items: [],\n    },\n    {\n      id: '4th-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '4th state',\n        description: '4th state description',\n      },\n      filter: (reprintRefItem) => reprintRefItem && reprintRefItem.conditionLevel === 4,\n      items: [],\n    },\n    {\n      id: '5th-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '5th state',\n        description: '5th state description',\n      },\n      filter: (reprintRefItem) => reprintRefItem && reprintRefItem.conditionLevel === 5,\n      items: [],\n    },\n    {\n      id: '6th-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '6th state',\n        description: '6th state description',\n      },\n      filter: (reprintRefItem) => reprintRefItem && reprintRefItem.conditionLevel === 6,\n      items: [],\n    },\n    {\n      id: '7th-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '7th state',\n        description: '7th state description',\n      },\n      filter: (reprintRefItem) => reprintRefItem && reprintRefItem.conditionLevel === 7,\n      items: [],\n    },\n    {\n      id: '8th-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '8th state',\n        description: '8th state description',\n      },\n      filter: (reprintRefItem) => reprintRefItem && reprintRefItem.conditionLevel === 8,\n      items: [],\n    },\n    {\n      id: '9th-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '9th state',\n        description: '9th state description',\n      },\n      filter: (reprintRefItem) => reprintRefItem && reprintRefItem.conditionLevel === 9,\n      items: [],\n    },\n    {\n      id: '10th-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '10th state',\n        description: '10th state description',\n      },\n      filter: (reprintRefItem) => reprintRefItem && reprintRefItem.conditionLevel === 10,\n      items: [],\n    },\n  ];\n\n  const reprintConditionLevelGroups = expectedReprintConditionLevelGroups.map(\n    (conditionLevelGroup) => ({\n      ...conditionLevelGroup,\n      items: reprintItems.filter(\n        conditionLevelGroup.filter,\n      ),\n    }),\n  ).filter((group) => group.items.length > 0);\n\n  /* Toggler should be visible if at least one group has more items\n    as the given initial limit allows */\n  const atLeastOneGroupHasMoreReprintItemsThanLimit = reprintConditionLevelGroups.some(\n    (group) => group.items.length > limitItemsTo,\n  );\n\n  return (\n    <LeporelloGraphicItem\n      className={`leporello-graphic-reprints-item-wrap ${additionalClassNames.join(' ')}`}\n      data-component=\"organisms/leporello-graphic-reprints-item\"\n      initiallyOpen={isOpen}\n      onToggle={setIsOpen}\n      visibleToggler={atLeastOneGroupHasMoreReprintItemsThanLimit}\n    >\n      {reprintConditionLevelGroups.map((reprintGroup, idx) => (\n        <div\n          key={reprintGroup.id}\n          className=\"leporello-graphic-reprints-item\"\n        >\n            <div className=\"leporello-graphic-reprints-item-intro\">\n              { idx === 0\n                && (\n                  <h2 className=\"chapter\">\n                    {t(reprintGroup.translations.title)}\n                  </h2>\n                )\n              }\n              <h3 className=\"headline\">{t(reprintGroup.translations.subtitle)}</h3>\n\n            </div>\n            <div className=\"leporello-graphic-reprints-item-list\">\n              <GraphicsList\n                items={\n                  limitReprintItems\n                    ? reprintGroup.items.slice(0, limitItemsTo)\n                    : reprintGroup.items\n                }\n                onItemClick={ innerHandleItemClick }\n              />\n            </div>\n          </div>\n      ))}\n    </LeporelloGraphicItem>\n  );\n};\n","import LeporelloArtefactRelatedWorksItem from './leporello-artefact-related-works-item';\n\nexport default LeporelloArtefactRelatedWorksItem;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from '~/i18n';\n\nimport LeporelloGraphicItem from '~/components/molecules/leporello-graphic-item';\nimport GraphicsList from '~/components/molecules/graphics-list';\n\nimport translations from './translations.json';\nimport './leporello-artefact-related-works-item.scss';\n\nexport default ({\n  relatedWorks,\n  className = '',\n  limitItemsTo = 5,\n}) => {\n  const { t } = useTranslation('LeporelloArtefactRelatedWorksItem', translations);\n\n  /* Number of initial visible related works items */\n  const relatedWorkItemsLimit = limitItemsTo;\n  const hasMoreRelatedWorkItemsThanLimit = relatedWorks.length > relatedWorkItemsLimit;\n\n  /* Map related works */\n  const relatedWorksItems = relatedWorks.map((relatedWorksItem) => {\n    const item = relatedWorksItem.ref;\n    const title = (item.titles[0].title) ? `${item.titles[0].title}, ${item.dating.dated}` : item.dating.dated;\n\n    const smallestImageSrc = item.representativeImage.small.src;\n\n    return {\n      inventoryNumber: item.inventoryNumber,\n      title,\n      to: `/${item.metadata.langCode}/${item.slug}`,\n      imgSrc: smallestImageSrc,\n      preventLinkFollowing: false,\n      triggersInternalTransition: true,\n    };\n  });\n\n  const [additionalClassNames, setAdditionalClassNames] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [limitRelatedWorkItems, setLimitRelatedWorkItems] = useState(!isOpen);\n\n  /* React on additional classnames changes */\n  useEffect(() => {\n    setAdditionalClassNames([\n      ...className.split(' '),\n    ]);\n  }, [className, isOpen]);\n\n  /* React on open / close toggle */\n  useEffect(() => {\n    setLimitRelatedWorkItems(!isOpen);\n  }, [isOpen]);\n\n  return (\n    <LeporelloGraphicItem\n      className={`leporello-artefact-related-works-item-wrap ${additionalClassNames.join(' ')}`}\n      data-component=\"organisms/leporello-artefact-related-works-item\"\n      initiallyOpen={isOpen}\n      onToggle={setIsOpen}\n      visibleToggler={hasMoreRelatedWorkItemsThanLimit}\n\n    >\n      <div className=\"leporello-artefact-related-works-item\">\n        <div className=\"leporello-artefact-related-works-item-intro\">\n          <h2 className=\"chapter\">{t('Related works')}</h2>\n        </div>\n        <div className=\"leporello-artefact-related-works-item-list\">\n          <GraphicsList\n            items={\n              limitRelatedWorkItems\n                ? relatedWorksItems.slice(0, relatedWorkItemsLimit)\n                : relatedWorksItems\n            }\n          />\n        </div>\n      </div>\n    </LeporelloGraphicItem>\n  );\n};\n","/* src/templates/virtual-object-page.js */\n\nimport React, { useState, useEffect } from 'react';\nimport Helmet from 'react-helmet';\n\nimport Navigation from '~/components/molecules/navigation';\nimport Leporello from '~/components/atoms/leporello';\nimport LeporelloGraphicDetailsItem from '~/components/organisms/leporello-graphic-details-item';\nimport LeporelloGraphicReprintsItem from '~/components/organisms/leporello-graphic-reprints-item';\nimport LeporelloArtefactRelatedWorksItem from '~/components/organisms/leporello-artefact-related-works-item';\nimport LeporelloGraphicRealItem from '~/components/organisms/leporello-graphic-real-item';\n\nimport i18n from '~/i18n';\n\nconst PageTemplate = ({ pageContext, location, navigate }) => {\n  const graphic = pageContext;\n  const title = (graphic.titles[0] && graphic.titles[0].title) || '';\n\n  i18n(graphic.metadata.langCode);\n\n  const [selectedReprintItem, setSelectedReprintItem] = useState(null);\n\n  const { hash } = location;\n  const { reprints } = graphic.references;\n\n  useEffect(() => {\n    if (hash.length === 0) {\n      return;\n    }\n\n    const selectedReprintInventoryNumber = hash.slice(1);\n    const matchingReprint = reprints.find(\n      (reprint) => reprint.inventoryNumber === selectedReprintInventoryNumber,\n    );\n\n    if (matchingReprint) {\n      setSelectedReprintItem(matchingReprint.ref);\n    }\n  }, [hash, reprints]);\n\n  useEffect(() => {\n    if (selectedReprintItem && location.hash.length > 1) {\n      const activeReprintElement = document.querySelector(location.hash);\n\n      if (!activeReprintElement) return;\n\n      setTimeout(() => {\n        activeReprintElement.scrollIntoView();\n      }, 0);\n    }\n  }, [selectedReprintItem, location]);\n\n  const reprintItemSelector = (reprintRef) => {\n    setSelectedReprintItem(reprintRef);\n\n    if (reprintRef) {\n      navigate(`${location.pathname}#${reprintRef.inventoryNumber}`, { replace: true });\n    } else {\n      navigate(`${location.pathname}`, { replace: true });\n    }\n  };\n\n  const queryParams = location.search.slice(1).split('&').reduce((acc, param) => {\n    const [name, value] = param.split('=');\n\n    acc[name] = decodeURIComponent(value);\n\n    return acc;\n  }, {});\n\n  const goBackTo = queryParams.back || `/${graphic.metadata.langCode}`;\n\n  return (\n    <div\n      className=\"template\"\n      data-template=\"virtual-object-page\"\n    >\n      <Helmet>\n        <title>Grafiken | {title} | Virtual</title>\n      </Helmet>\n\n      <Navigation\n        goBackTo={goBackTo}\n      />\n\n      <section className=\"body\">\n        <Leporello>\n          <LeporelloGraphicDetailsItem graphic={graphic} location={location.href} />\n          {selectedReprintItem\n            ? (\n              <LeporelloGraphicRealItem\n                graphic={selectedReprintItem}\n                onClose={() => reprintItemSelector(null)}\n              />\n            )\n            : (\n              <LeporelloGraphicReprintsItem\n                reprints={graphic.references.reprints}\n                onItemClick={reprintItemSelector}\n              />\n            )\n          }\n\n          {graphic.references.relatedWorks.length > 0\n            && (\n              <LeporelloArtefactRelatedWorksItem\n                relatedWorks={graphic.references.relatedWorks}\n              />\n            )\n          }\n        </Leporello>\n      </section>\n    </div>\n  );\n};\n\nexport default PageTemplate;\n"],"sourceRoot":""}