{"version":3,"sources":["webpack:///./src/components/molecules/involved-persons-list/index.js","webpack:///./src/components/molecules/involved-persons-list/involved-persons-list.jsx","webpack:///./src/components/atoms/copy-text/index.js","webpack:///./src/components/atoms/copy-text/copy-text.jsx","webpack:///./src/components/organisms/leporello-graphic-details-item/index.js","webpack:///./src/components/organisms/leporello-graphic-details-item/leporello-graphic-details-item.jsx","webpack:///./src/components/molecules/graphics-list/index.js","webpack:///./src/components/molecules/graphics-list/graphics-list.jsx","webpack:///./src/components/organisms/leporello-graphic-reprints-item/index.js","webpack:///./src/components/organisms/leporello-graphic-reprints-item/leporello-graphic-reprints-item.jsx","webpack:///./src/components/organisms/leporello-artefact-related-works-item/index.js","webpack:///./src/components/organisms/leporello-artefact-related-works-item/leporello-artefact-related-works-item.jsx","webpack:///./src/templates/virtual-object-page.jsx"],"names":["InvolvedPersonsTable","data","items","map","item","idx","className","key","alternativeName","role","remarks","CopyText","text","split","i","LeporelloGraphicDetailsItem","location","graphic","visibleCloser","initiallyOpen","t","useTranslation","translations","title","titles","description","representativeImage","dating","dimensions","involvedPersons","inventoryNumber","signature","catalogWorkReferences","publications","classification","sortingWeight","name","pos","getPatternPos","str","foundSortingWeight","find","sw","Number","MAX_SAFE_INTEGER","catalogWorkReferenceItems","sort","a","b","reference","term","catalogWorkReferenceName","definition","referenceNumber","useState","additionalClassNames","setAdditionalClassNames","isOpen","setIsOpen","useEffect","largestImageSrc","l","src","join","data-component","onToggle","visibleToggler","closerType","alt","printProcess","Entry","dated","length","GraphicsList","onItemClick","imgSrc","to","triggersInternalTransition","onClick","e","preventLinkFollowing","preventDefault","classNamePrefix","caption","modifierWithBox","LeporelloGraphicReprintsItem","reprints","limitItemsTo","reprintItems","reprintItem","ref","smallestImageSrc","s","owner","langCode","slug","conditionLevel","limitReprintItems","setLimitReprintItems","innerHandleItemClick","foundSelectedItem","refItem","reprintConditionLevelGroups","id","subtitle","filter","reprintRefItem","includes","conditionLevelGroup","group","atLeastOneGroupHasMoreReprintItemsThanLimit","some","reprintGroup","slice","LeporelloArtefactRelatedWorksItem","relatedWorks","relatedWorkItemsLimit","hasMoreRelatedWorkItemsThanLimit","relatedWorksItems","relatedWorksItem","limitRelatedWorkItems","setLimitRelatedWorkItems","PageTemplate","pageContext","i18n","selectedReprintItem","setSelectedReprintItem","data-template","goBackTo","href","onClose","references"],"mappings":"0vCAEeA,G,UCEA,YAER,IAAD,IADJC,KAEMC,QADF,MADG,GACH,GACeC,KACjB,SAACC,EAAMC,GAAP,OACE,wBAAIC,UAAU,8BAA8BC,IAAKF,GAC9CD,EAAKI,gBADR,KAC2BJ,EAAKK,KADhC,IACwCL,EAAKM,QAAW,0BAAMJ,UAAU,WAAWF,EAAKM,SAAkB,OAI9G,OACE,wBACEJ,UAAU,yBACTJ,K,YCfQS,G,UCIA,gBACbC,EADa,EACbA,KADa,OAGb,yBACEN,UAAU,aAERM,EAAKC,MAAM,MAAMV,KAAI,SAACC,EAAMU,GAAP,OAAa,uBAAGP,IAAKO,GAAKV,GAAQ,W,wBCV9CW,G,UCWA,YAMR,IALLC,EAKI,EALJA,SACAC,EAII,EAJJA,QAII,IAHJC,qBAGI,aAFJC,qBAEI,aADJb,iBACI,MADQ,GACR,EACIc,EAAMC,YAAe,8BAA+BC,GAApDF,EAKFG,EAASN,EAAQO,OAAO,IAAMP,EAAQO,OAAO,GAAGD,OAAU,GAE1DE,EAAcR,EAAQQ,aAAe,IAGzCC,EASET,EATFS,oBACAC,EAQEV,EARFU,OACAC,EAOEX,EAPFW,WACAC,EAMEZ,EANFY,gBACAC,EAKEb,EALFa,gBACAC,EAIEd,EAJFc,UACAC,EAGEf,EAHFe,sBACAC,EAEEhB,EAFFgB,aACAC,EACEjB,EADFiB,eAIIC,EAAgB,CACpB,CACEC,KAAM,UACNC,IAAK,GAEP,CACED,KAAM,YACNC,IAAK,GAEP,CACED,KAAM,MACNC,IAAK,IAGHC,EAAgB,SAACC,GACrB,IAAMC,EAAqBL,EAAcM,MAAK,SAAAC,GAAE,OAAIH,IAAQG,EAAGN,QAE/D,OAAOI,EAAqBA,EAAmBH,IAAMM,OAAOC,kBAOxDC,EAL8Bb,EAAsBc,MACxD,SAACC,EAAGC,GAAJ,OAAUV,EAAcU,EAAEvB,aAAea,EAAcS,EAAEtB,gBAIGtB,KAC5D,SAAA8C,GAAS,MAAK,CACZC,KAAM9B,EAAE,kCAAmC,CAAE+B,yBAA0BF,EAAUxB,cACjF2B,WAAYH,EAAUI,oBAlDtB,EAsDoDC,mBAAS,IAA1DC,EAtDH,KAsDyBC,EAtDzB,OAuDwBF,qBAAWnC,GAAhCsC,EAvDH,KAuDWC,EAvDX,KA0DJC,qBAAU,WACRD,IAAYvC,KACX,CAACA,IAGJwC,qBAAU,WACRH,EAAwB,GAAD,mBAClBlD,EAAUO,MAAM,MADE,YAMjB4C,EAAS,CAAC,YAAc,QAE7B,CAACnD,EAAWmD,IAEf,IAAMG,EAAkBlC,EAAoBmC,EAAEC,IAE9C,OACE,kBAAC,IAAD,CACExD,UAAS,uCAAyCiD,EAAqBQ,KAAK,KAC5EC,iBAAe,2CACf7C,cAAesC,EACfQ,SAAUP,EACVQ,eAAgBhD,EAChBiD,WAAW,cAEX,yBAAK7D,UAAS,kCAAoCiD,EAAqBQ,KAAK,MAC1E,4BAAQzD,UAAU,0CAChB,wBAAIA,UAAU,WAAWc,EAAE,iBAG7B,yBAAKd,UAAU,2CACb,yBAAKA,UAAW,iDACd,kBAAC,IAAD,CACEwD,IAAKF,EACLQ,IAAK7C,KAGT,yBAAKjB,UAAU,gDACb,4BAAQA,UAAU,uDAChB,wBAAIA,UAAU,SAASiB,GACvB,wBAAIjB,UAAU,YACX4B,EAAeA,eADlB,KACoCA,EAAemC,eAGrD,yBAAK/D,UAAU,wDACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,CACEM,KAAMa,KAIV,yBAAKnB,UAAU,UACb,kBAAC,IAAD,KACE,kBAAC,IAAegE,MAAhB,CACEpB,KAAM9B,EAAE,eACRgC,WAAY,kBAAC,EAAD,CAAqBnD,KAAM4B,MAEzC,kBAAC,IAAeyC,MAAhB,CACEpB,KAAM9B,EAAE,mBACRgC,WAAezB,EAAO4C,MAAZ,IAAqB5C,EAAOjB,UAIxC,kBAAC,IAAe4D,MAAhB,CACEpB,KAAM9B,EAAE,cACRgC,WAAYxB,IAEbG,GAAa,kBAAC,IAAeuC,MAAhB,CACZpB,KAAM9B,EAAE,aACRgC,WAAYrB,IAMZc,EAA0B1C,KACxB,SAAAC,GAAI,OACF,kBAAC,IAAekE,MAAhB,CACE/D,IAAKH,EAAK8C,KACVA,KAAM9C,EAAK8C,KACXE,WAAYhD,EAAKgD,gBAMzB,kBAAC,IAAekB,MAAhB,CACEpB,KAAK,SACLE,WAAYtB,IAEd,kBAAC,IAAewC,MAAhB,CACEpB,KAAM9B,EAAE,mBACRgC,WAAYpC,KAKfiB,EAAauC,OAAS,GAClB,kBAAC,IAAD,KACD,kBAAC,IAAeF,MAAhB,CACEpB,KAAM9B,EAAE,cACRgC,WAAY,kBAAC,IAAD,CAAiBnD,KAAMgC,e,YClL1CwC,G,UCKA,gBACbvE,EADa,EACbA,MACAwE,EAFa,EAEbA,YAFa,OAIX,wBACEpE,UAAU,gBACV0D,iBAAe,2BAGb9D,EAAMC,KACJ,SAAAC,GAAI,OAAI,wBACNG,IAAKH,EAAKuE,OACVrE,UAAU,sBAEV,kBAAC,IAAD,CACEsE,GAAIxE,EAAKwE,GACTC,6BAA8BzE,EAAKyE,2BACnCC,QAAS,SAACC,GACR,OAAI3E,EAAK4E,uBACsB,mBAAjBN,GACVA,EAAYtE,GAEd2E,EAAEE,kBACK,KAMX,kBAAC,IAAD,CACEnB,IAAK1D,EAAKuE,OACVP,IAAKhE,EAAKmB,MACV2D,gBAAiB,4BACjBC,QAAS/E,EAAKmB,MACd6D,iBAAiB,Y,YCvClBC,G,UCOA,YAKR,IAJLC,EAII,EAJJA,SAII,IAHJhF,iBAGI,MAHQ,GAGR,MAFJoE,mBAEI,MAFU,aAEV,MADJa,oBACI,MADW,EACX,EACInE,EAAMC,YAAe,+BAAgCC,GAArDF,EAGFoE,EAAeF,EAASnF,KAAI,SAACsF,GACjC,IAAMrF,EAAOqF,EAAYC,IAEnBC,EAAmBvF,EAAKsB,oBAAoBkE,EAAE9B,IAEpD,MAAO,CACLhC,gBAAiB1B,EAAK0B,gBACtBP,MAAO,CAACnB,EAAKuB,OAAO4C,MAAO,KAAMnE,EAAKyF,OACtCjB,GAAG,IAAKxE,EAAK0F,SAAX,IAAuB1F,EAAK2F,KAC9BpB,OAAQgB,EACRX,sBAAsB,EACtBgB,eAAgB5F,EAAK4F,mBAfrB,EAmBoD1C,mBAAS,IAA1DC,EAnBH,KAmByBC,EAnBzB,OAoBwBF,oBAAS,GAA9BG,EApBH,KAoBWC,EApBX,OAqB8CJ,oBAAUG,GAArDwC,EArBH,KAqBsBC,EArBtB,KAwBJvC,qBAAU,WACRH,EAAwB,YACnBlD,EAAUO,MAAM,SAEpB,CAACP,EAAWmD,IAGfE,qBAAU,WACRuC,GAAsBzC,KACrB,CAACA,IAEJ,IAAM0C,EAAuB,SAAC/F,GAC5B,IAAMgG,EAAoBd,EAAS7C,MACjC,SAAA4D,GAAO,OAAIA,EAAQvE,kBAAoB1B,EAAK0B,mBAG1CsE,GAA8C,mBAAjB1B,GAC/BA,EAAY0B,EAAkBV,MA6G5BY,EAzGsC,CAC1C,CACEC,GAAI,YACJjF,aAAc,CACZC,MAAO,cACPiF,SAAU,YACV/E,YAAa,yBAEfgF,OAAQ,SAAAC,GAAc,OAAIA,GAAkB,CAAC,EAAG,GAAGC,SAASD,EAAeV,iBAC3E9F,MAAO,IAET,CACEqG,GAAI,YACJjF,aAAc,CACZC,MAAO,cACPiF,SAAU,YACV/E,YAAa,yBAEfgF,OAAQ,SAAAC,GAAc,OAAIA,GAAoD,IAAlCA,EAAeV,gBAC3D9F,MAAO,IAET,CACEqG,GAAI,YACJjF,aAAc,CACZC,MAAO,cACPiF,SAAU,YACV/E,YAAa,yBAEfgF,OAAQ,SAAAC,GAAc,OAAIA,GAAoD,IAAlCA,EAAeV,gBAC3D9F,MAAO,IAET,CACEqG,GAAI,YACJjF,aAAc,CACZC,MAAO,cACPiF,SAAU,YACV/E,YAAa,yBAEfgF,OAAQ,SAAAC,GAAc,OAAIA,GAAoD,IAAlCA,EAAeV,gBAC3D9F,MAAO,IAIT,CACEqG,GAAI,YACJjF,aAAc,CACZC,MAAO,cACPiF,SAAU,YACV/E,YAAa,yBAEfgF,OAAQ,SAAAC,GAAc,OAAIA,GAAoD,IAAlCA,EAAeV,gBAC3D9F,MAAO,IAET,CACEqG,GAAI,YACJjF,aAAc,CACZC,MAAO,cACPiF,SAAU,YACV/E,YAAa,yBAEfgF,OAAQ,SAAAC,GAAc,OAAIA,GAAoD,IAAlCA,EAAeV,gBAC3D9F,MAAO,IAET,CACEqG,GAAI,YACJjF,aAAc,CACZC,MAAO,cACPiF,SAAU,YACV/E,YAAa,yBAEfgF,OAAQ,SAAAC,GAAc,OAAIA,GAAoD,IAAlCA,EAAeV,gBAC3D9F,MAAO,IAET,CACEqG,GAAI,YACJjF,aAAc,CACZC,MAAO,cACPiF,SAAU,YACV/E,YAAa,yBAEfgF,OAAQ,SAAAC,GAAc,OAAIA,GAAoD,IAAlCA,EAAeV,gBAC3D9F,MAAO,IAET,CACEqG,GAAI,YACJjF,aAAc,CACZC,MAAO,cACPiF,SAAU,YACV/E,YAAa,yBAEfgF,OAAQ,SAAAC,GAAc,OAAIA,GAAoD,IAAlCA,EAAeV,gBAC3D9F,MAAO,IAET,CACEqG,GAAI,aACJjF,aAAc,CACZC,MAAO,cACPiF,SAAU,aACV/E,YAAa,0BAEfgF,OAAQ,SAAAC,GAAc,OAAIA,GAAoD,KAAlCA,EAAeV,gBAC3D9F,MAAO,KAI6DC,KACtE,SAAAyG,GAAmB,wBACdA,EADc,CAEjB1G,MAAOsF,EAAaiB,OAClBG,EAAoBH,aAGxBA,QAAO,SAAAI,GAAK,OAAIA,EAAM3G,MAAMsE,OAAS,KAIjCsC,EAA8CR,EAA4BS,MAC9E,SAAAF,GAAK,OAAIA,EAAM3G,MAAMsE,OAASe,KAGhC,OACE,kBAAC,IAAD,CACEjF,UAAS,wCAA0CiD,EAAqBQ,KAAK,KAC7EC,iBAAe,4CACf7C,cAAesC,EACfQ,SAAUP,EACVQ,eAAgB4C,GAEfR,EAA4BnG,KAAI,SAAC6G,EAAc3G,GAAf,OAC/B,yBACEE,IAAKyG,EAAaT,GAClBjG,UAAU,mCAER,yBAAKA,UAAU,yCACH,IAARD,GAEE,wBAAIC,UAAU,WACXc,EAAE4F,EAAa1F,aAAaC,QAInC,wBAAIjB,UAAU,YAAYc,EAAE4F,EAAa1F,aAAakF,YAGxD,yBAAKlG,UAAU,wCACb,kBAAC,EAAD,CACEJ,MACE+F,EACIe,EAAa9G,MAAM+G,MAAM,EAAG1B,GAC5ByB,EAAa9G,MAEnBwE,YAAcyB,Y,YChNfe,G,UCOA,YAIR,IAHLC,EAGI,EAHJA,aAGI,IAFJ7G,iBAEI,MAFQ,GAER,MADJiF,oBACI,MADW,EACX,EACInE,EAAMC,YAAe,oCAAqCC,GAA1DF,EAGFgG,EAAwB7B,EACxB8B,EAAmCF,EAAa3C,OAAS4C,EAGzDE,EAAoBH,EAAahH,KAAI,SAACoH,GAC1C,IAAMnH,EAAOmH,EAAiB7B,IACxBnE,EAASnB,EAAKoB,OAAO,GAAGD,MAAYnB,EAAKoB,OAAO,GAAGD,MAA3C,KAAqDnB,EAAKuB,OAAO4C,MAAUnE,EAAKuB,OAAO4C,MAE/FoB,EAAmBvF,EAAKsB,oBAAoBkE,EAAE9B,IAEpD,MAAO,CACLhC,gBAAiB1B,EAAK0B,gBACtBP,QACAqD,GAAG,IAAKxE,EAAK0F,SAAX,IAAuB1F,EAAK2F,KAC9BpB,OAAQgB,EACRX,sBAAsB,EACtBH,4BAA4B,MApB5B,EAwBoDvB,mBAAS,IAA1DC,EAxBH,KAwByBC,EAxBzB,OAyBwBF,oBAAS,GAA9BG,EAzBH,KAyBWC,EAzBX,OA0BsDJ,oBAAUG,GAA7D+D,EA1BH,KA0B0BC,EA1B1B,KAwCJ,OAXA9D,qBAAU,WACRH,EAAwB,YACnBlD,EAAUO,MAAM,SAEpB,CAACP,EAAWmD,IAGfE,qBAAU,WACR8D,GAA0BhE,KACzB,CAACA,IAGF,kBAAC,IAAD,CACEnD,UAAS,8CAAgDiD,EAAqBQ,KAAK,KACnFC,iBAAe,kDACf7C,cAAesC,EACfQ,SAAUP,EACVQ,eAAgBmD,GAGhB,yBAAK/G,UAAU,yCACb,yBAAKA,UAAU,+CACb,wBAAIA,UAAU,WAAWc,EAAE,mBAE7B,yBAAKd,UAAU,8CACb,kBAAC,EAAD,CACEJ,MACEsH,EACIF,EAAkBL,MAAM,EAAGG,GAC3BE,S,YCJHI,UApDM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAa3G,EAAe,EAAfA,SAC7BC,EAAU0G,EACVpG,EAASN,EAAQO,OAAO,IAAMP,EAAQO,OAAO,GAAGD,OAAU,GAEhEqG,YAAK3G,EAAQ6E,UAJqC,MAMIxC,mBAAS,MAAxDuE,EAN2C,KAMtBC,EANsB,KAQlD,OACE,yBACExH,UAAU,WACVyH,gBAAc,uBAEd,kBAAC,IAAD,KACE,6CAAmBxG,EAAnB,eAGF,kBAAC,IAAD,CACEyG,SAAQ,IAAM/G,EAAQ6E,WAGxB,6BAASxF,UAAU,QACjB,kBAAC,IAAD,KACE,kBAAC,EAAD,CAA6BW,QAASA,EAASD,SAAUA,EAASiH,OACjEJ,EAEG,kBAAC,IAAD,CACE5G,QAAS4G,EACTK,QAAS,kBAAMJ,EAAuB,SAIxC,kBAAC,EAAD,CACExC,SAAUrE,EAAQkH,WAAW7C,SAC7BZ,YAAaoD,IAKlB7G,EAAQkH,WAAWhB,aAAa3C,OAAS,GAEtC,kBAAC,EAAD,CACE2C,aAAclG,EAAQkH,WAAWhB,oB","file":"component---src-templates-virtual-object-page-jsx-6104b66f5d825ed637a1.js","sourcesContent":["import InvolvedPersonsTable from './involved-persons-list';\n\nexport default InvolvedPersonsTable;\n","import React from 'react';\n\nimport './involved-persons-list.scss';\n\nexport default ({\n  data = [],\n}) => {\n  const items = data.map(\n    (item, idx) => (\n      <li className=\"involved-persons-list__item\" key={idx}>\n        {item.alternativeName}, {item.role} {(item.remarks) ? <span className=\"remarks\">{item.remarks}</span> : ''}\n      </li>\n    ),\n  );\n  return (\n    <ul\n      className=\"involved-persons-list\">\n      {items}\n    </ul>);\n};\n","import CopyText from './copy-text';\n\nexport default CopyText;\n","\nimport React from 'react';\n\nimport './copy-text.scss';\n\n\nexport default ({\n  text,\n}) => (\n  <div\n    className=\"copy-text\"\n  >\n    { text.split('\\n').map((item, i) => <p key={i}>{ item || '\\u200B' }</p>) }\n  </div>\n);\n","import LeporelloGraphicDetailsItem from './leporello-graphic-details-item';\n\nexport default LeporelloGraphicDetailsItem;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from '~/i18n';\n\nimport LeporelloGraphicItem from '~/components/molecules/leporello-graphic-item';\nimport DefinitionList from '~/components/atoms/definition-list';\nimport InvolvedPersonsList from '~/components/molecules/involved-persons-list';\nimport LiteratureTable from '~/components/molecules/literature-table';\nimport CopyText from '~/components/atoms/copy-text';\nimport Image from '~/components/atoms/image';\n\nimport translations from './translations.json';\nimport './leporello-graphic-details-item.scss';\n\nexport default ({\n  location,\n  graphic,\n  visibleCloser = true,\n  initiallyOpen = false,\n  className = '',\n}) => {\n  const { t } = useTranslation('LeporelloGraphicDetailsItem', translations);\n\n  /* Prepare main and important object infos for usage */\n  // const inventor = graphic.involvedPersons.find(person => person.role === 'Inventor');\n\n  const title = (graphic.titles[0] && graphic.titles[0].title) || '';\n  // const subtitle = inventor ? inventor.name : ' ';\n  const description = graphic.description || ' ';\n\n  const {\n    representativeImage,\n    dating,\n    dimensions,\n    involvedPersons,\n    inventoryNumber,\n    signature,\n    catalogWorkReferences,\n    publications,\n    classification,\n  } = graphic;\n\n  /* Sorting catalogWorkReferences */\n  const sortingWeight = [\n    {\n      name: 'Bartsch',\n      pos: 1,\n    },\n    {\n      name: 'Hollstein',\n      pos: 2,\n    },\n    {\n      name: 'GND',\n      pos: 3,\n    },\n  ];\n  const getPatternPos = (str) => {\n    const foundSortingWeight = sortingWeight.find(sw => str === sw.name);\n\n    return foundSortingWeight ? foundSortingWeight.pos : Number.MAX_SAFE_INTEGER;\n  };\n  const sortedCatalogWorkReferences = catalogWorkReferences.sort(\n    (a, b) => getPatternPos(b.description) - getPatternPos(a.description),\n  );\n\n  /* Map catalog work references */\n  const catalogWorkReferenceItems = sortedCatalogWorkReferences.map(\n    reference => ({\n      term: t('{{catalogWorkReferenceName}}-No', { catalogWorkReferenceName: reference.description }),\n      definition: reference.referenceNumber,\n    }),\n  );\n\n  const [additionalClassNames, setAdditionalClassNames] = useState([]);\n  const [isOpen, setIsOpen] = useState(!!initiallyOpen);\n\n  /* React on isOpen change */\n  useEffect(() => {\n    setIsOpen(!!initiallyOpen);\n  }, [initiallyOpen]);\n\n  /* React on additional classnames change and open / close toggle */\n  useEffect(() => {\n    setAdditionalClassNames([\n      ...className.split(' '),\n      /*\n        We add an extra classname, if the leporello item was opened,\n        to be able to react to it on style level\n      */\n      ...(isOpen ? ['-is-open'] : []),\n    ]);\n  }, [className, isOpen]);\n\n  const largestImageSrc = representativeImage.l.src;\n\n  return (\n    <LeporelloGraphicItem\n      className={`leporello-graphic-details-item-wrap ${additionalClassNames.join(' ')}`}\n      data-component=\"organisms/leporello-graphic-details-item\"\n      initiallyOpen={isOpen}\n      onToggle={setIsOpen}\n      visibleToggler={visibleCloser}\n      closerType=\"with-cover\"\n    >\n      <div className={`leporello-graphic-details-item ${additionalClassNames.join(' ')}`}>\n        <header className=\"leporello-graphic-details-item__header\">\n          <h2 className=\"chapter\">{t('Master Data')}</h2>\n        </header>\n\n        <div className=\"leporello-graphic-details-item__content\">\n          <div className={'leporello-graphic-details-item__content-image'}>\n            <Image\n              src={largestImageSrc}\n              alt={title}\n            />\n          </div>\n          <div className=\"leporello-graphic-details-item__content-info\">\n            <header className=\"leporello-graphic-details-item__content-info-header\">\n              <h1 className=\"title\">{title}</h1>\n              <h2 className=\"subtitle\">\n                {classification.classification}, {classification.printProcess}\n              </h2>\n            </header>\n            <div className=\"leporello-graphic-details-item__content-info-content\">\n              <div className=\"column\">\n                <CopyText\n                  text={description}\n                />\n              </div>\n\n              <div className=\"column\">\n                <DefinitionList>\n                  <DefinitionList.Entry\n                    term={t('Attribution')}\n                    definition={<InvolvedPersonsList data={involvedPersons} />}\n                  />\n                  <DefinitionList.Entry\n                    term={t('Production date')}\n                    definition={`${dating.dated} ${dating.remarks}`}\n                  />\n\n\n                  <DefinitionList.Entry\n                    term={t('Dimensions')}\n                    definition={dimensions}\n                  />\n                  {signature && <DefinitionList.Entry\n                    term={t('Signature')}\n                    definition={signature}\n                  />\n                  }\n\n\n                  {\n                    catalogWorkReferenceItems.map(\n                      item => (\n                        <DefinitionList.Entry\n                          key={item.term}\n                          term={item.term}\n                          definition={item.definition}\n                        />\n                      ),\n                    )\n                  }\n\n                  <DefinitionList.Entry\n                    term=\"CDA ID\"\n                    definition={inventoryNumber}\n                  />\n                  <DefinitionList.Entry\n                    term={t('Persistent Link')}\n                    definition={location}\n                  />\n\n                </DefinitionList>\n\n                {publications.length > 0\n                  && <DefinitionList>\n                    <DefinitionList.Entry\n                      term={t('Literature')}\n                      definition={<LiteratureTable data={publications} />}\n                    />\n                  </DefinitionList>\n                }\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </LeporelloGraphicItem>\n  );\n};\n","import GraphicsList from './graphics-list';\n\nexport default GraphicsList;\n","import React from 'react';\n\nimport Link from '~/components/atoms/link';\nimport Image from '~/components/atoms/image';\n\nimport './graphics-list.scss';\n\nexport default ({\n  items,\n  onItemClick,\n}) => (\n    <ul\n      className=\"graphics-list\"\n      data-component=\"molecules/graphics-list\"\n    >\n      {\n        items.map(\n          item => <li\n            key={item.imgSrc}\n            className=\"graphics-list-item\"\n          >\n            <Link\n              to={item.to}\n              triggersInternalTransition={!!item.triggersInternalTransition}\n              onClick={(e) => {\n                if (item.preventLinkFollowing) {\n                  if ((typeof onItemClick) === 'function') {\n                    onItemClick(item);\n                  }\n                  e.preventDefault();\n                  return false;\n                }\n\n                return true;\n              }}\n            >\n              <Image\n                src={item.imgSrc}\n                alt={item.title}\n                classNamePrefix={'graphics-list-item__image'}\n                caption={item.title}\n                modifierWithBox={true}\n              />\n            </Link>\n          </li>,\n        )\n      }\n    </ul>\n\n);\n","import LeporelloGraphicReprintsItem from './leporello-graphic-reprints-item';\n\nexport default LeporelloGraphicReprintsItem;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from '~/i18n';\n\nimport LeporelloGraphicItem from '~/components/molecules/leporello-graphic-item';\nimport GraphicsList from '~/components/molecules/graphics-list';\n\nimport translations from './translations.json';\nimport './leporello-graphic-reprints-item.scss';\n\nexport default ({\n  reprints,\n  className = '',\n  onItemClick = () => {},\n  limitItemsTo = 5,\n}) => {\n  const { t } = useTranslation('LeporelloGraphicReprintsItem', translations);\n\n  /* Map reprints */\n  const reprintItems = reprints.map((reprintItem) => {\n    const item = reprintItem.ref;\n\n    const smallestImageSrc = item.representativeImage.s.src;\n\n    return {\n      inventoryNumber: item.inventoryNumber,\n      title: [item.dating.dated, ', ', item.owner],\n      to: `/${item.langCode}/${item.slug}`,\n      imgSrc: smallestImageSrc,\n      preventLinkFollowing: true,\n      conditionLevel: item.conditionLevel,\n    };\n  });\n\n  const [additionalClassNames, setAdditionalClassNames] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [limitReprintItems, setLimitReprintItems] = useState(!isOpen);\n\n  /* React on additional classnames changes */\n  useEffect(() => {\n    setAdditionalClassNames([\n      ...className.split(' '),\n    ]);\n  }, [className, isOpen]);\n\n  /* React on open / close toggle */\n  useEffect(() => {\n    setLimitReprintItems(!isOpen);\n  }, [isOpen]);\n\n  const innerHandleItemClick = (item) => {\n    const foundSelectedItem = reprints.find(\n      refItem => refItem.inventoryNumber === item.inventoryNumber,\n    );\n\n    if (foundSelectedItem && (typeof onItemClick) === 'function') {\n      onItemClick(foundSelectedItem.ref);\n    }\n  };\n\n  const expectedReprintConditionLevelGroups = [\n    {\n      id: '1st-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '1st state',\n        description: '1st state description',\n      },\n      filter: reprintRefItem => reprintRefItem && [0, 1].includes(reprintRefItem.conditionLevel),\n      items: [],\n    },\n    {\n      id: '2nd-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '2nd state',\n        description: '2nd state description',\n      },\n      filter: reprintRefItem => reprintRefItem && reprintRefItem.conditionLevel === 2,\n      items: [],\n    },\n    {\n      id: '3rd-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '3rd state',\n        description: '3rd state description',\n      },\n      filter: reprintRefItem => reprintRefItem && reprintRefItem.conditionLevel === 3,\n      items: [],\n    },\n    {\n      id: '4th-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '4th state',\n        description: '4th state description',\n      },\n      filter: reprintRefItem => reprintRefItem && reprintRefItem.conditionLevel === 4,\n      items: [],\n    },\n\n\n    {\n      id: '5th-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '5th state',\n        description: '5th state description',\n      },\n      filter: reprintRefItem => reprintRefItem && reprintRefItem.conditionLevel === 5,\n      items: [],\n    },\n    {\n      id: '6th-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '6th state',\n        description: '6th state description',\n      },\n      filter: reprintRefItem => reprintRefItem && reprintRefItem.conditionLevel === 6,\n      items: [],\n    },\n    {\n      id: '7th-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '7th state',\n        description: '7th state description',\n      },\n      filter: reprintRefItem => reprintRefItem && reprintRefItem.conditionLevel === 7,\n      items: [],\n    },\n    {\n      id: '8th-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '8th state',\n        description: '8th state description',\n      },\n      filter: reprintRefItem => reprintRefItem && reprintRefItem.conditionLevel === 8,\n      items: [],\n    },\n    {\n      id: '9th-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '9th state',\n        description: '9th state description',\n      },\n      filter: reprintRefItem => reprintRefItem && reprintRefItem.conditionLevel === 9,\n      items: [],\n    },\n    {\n      id: '10th-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '10th state',\n        description: '10th state description',\n      },\n      filter: reprintRefItem => reprintRefItem && reprintRefItem.conditionLevel === 10,\n      items: [],\n    },\n  ];\n\n  const reprintConditionLevelGroups = expectedReprintConditionLevelGroups.map(\n    conditionLevelGroup => ({\n      ...conditionLevelGroup,\n      items: reprintItems.filter(\n        conditionLevelGroup.filter,\n      ),\n    }),\n  ).filter(group => group.items.length > 0);\n\n  /* Toggler should be visible if at least one group has more items\n    as the given initial limit allows */\n  const atLeastOneGroupHasMoreReprintItemsThanLimit = reprintConditionLevelGroups.some(\n    group => group.items.length > limitItemsTo,\n  );\n\n  return (\n    <LeporelloGraphicItem\n      className={`leporello-graphic-reprints-item-wrap ${additionalClassNames.join(' ')}`}\n      data-component=\"organisms/leporello-graphic-reprints-item\"\n      initiallyOpen={isOpen}\n      onToggle={setIsOpen}\n      visibleToggler={atLeastOneGroupHasMoreReprintItemsThanLimit}\n    >\n      {reprintConditionLevelGroups.map((reprintGroup, idx) => (\n        <div\n          key={reprintGroup.id}\n          className=\"leporello-graphic-reprints-item\"\n        >\n            <div className=\"leporello-graphic-reprints-item-intro\">\n              { idx === 0\n                && (\n                  <h2 className=\"chapter\">\n                    {t(reprintGroup.translations.title)}\n                  </h2>\n                )\n              }\n              <h3 className=\"headline\">{t(reprintGroup.translations.subtitle)}</h3>\n\n            </div>\n            <div className=\"leporello-graphic-reprints-item-list\">\n              <GraphicsList\n                items={\n                  limitReprintItems\n                    ? reprintGroup.items.slice(0, limitItemsTo)\n                    : reprintGroup.items\n                }\n                onItemClick={ innerHandleItemClick }\n              />\n            </div>\n          </div>\n      ))}\n    </LeporelloGraphicItem>\n  );\n};\n","import LeporelloArtefactRelatedWorksItem from './leporello-artefact-related-works-item';\n\nexport default LeporelloArtefactRelatedWorksItem;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from '~/i18n';\n\nimport LeporelloGraphicItem from '~/components/molecules/leporello-graphic-item';\nimport GraphicsList from '~/components/molecules/graphics-list';\n\nimport translations from './translations.json';\nimport './leporello-artefact-related-works-item.scss';\n\nexport default ({\n  relatedWorks,\n  className = '',\n  limitItemsTo = 5,\n}) => {\n  const { t } = useTranslation('LeporelloArtefactRelatedWorksItem', translations);\n\n  /* Number of initial visible related works items */\n  const relatedWorkItemsLimit = limitItemsTo;\n  const hasMoreRelatedWorkItemsThanLimit = relatedWorks.length > relatedWorkItemsLimit;\n\n  /* Map related works */\n  const relatedWorksItems = relatedWorks.map((relatedWorksItem) => {\n    const item = relatedWorksItem.ref;\n    const title = (item.titles[0].title) ? `${item.titles[0].title}, ${item.dating.dated}` : item.dating.dated;\n\n    const smallestImageSrc = item.representativeImage.s.src;\n\n    return {\n      inventoryNumber: item.inventoryNumber,\n      title,\n      to: `/${item.langCode}/${item.slug}`,\n      imgSrc: smallestImageSrc,\n      preventLinkFollowing: false,\n      triggersInternalTransition: true,\n    };\n  });\n\n  const [additionalClassNames, setAdditionalClassNames] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [limitRelatedWorkItems, setLimitRelatedWorkItems] = useState(!isOpen);\n\n  /* React on additional classnames changes */\n  useEffect(() => {\n    setAdditionalClassNames([\n      ...className.split(' '),\n    ]);\n  }, [className, isOpen]);\n\n  /* React on open / close toggle */\n  useEffect(() => {\n    setLimitRelatedWorkItems(!isOpen);\n  }, [isOpen]);\n\n  return (\n    <LeporelloGraphicItem\n      className={`leporello-artefact-related-works-item-wrap ${additionalClassNames.join(' ')}`}\n      data-component=\"organisms/leporello-artefact-related-works-item\"\n      initiallyOpen={isOpen}\n      onToggle={setIsOpen}\n      visibleToggler={hasMoreRelatedWorkItemsThanLimit}\n\n    >\n      <div className=\"leporello-artefact-related-works-item\">\n        <div className=\"leporello-artefact-related-works-item-intro\">\n          <h2 className=\"chapter\">{t('Related works')}</h2>\n        </div>\n        <div className=\"leporello-artefact-related-works-item-list\">\n          <GraphicsList\n            items={\n              limitRelatedWorkItems\n                ? relatedWorksItems.slice(0, relatedWorkItemsLimit)\n                : relatedWorksItems\n            }\n          />\n        </div>\n      </div>\n    </LeporelloGraphicItem>\n  );\n};\n","/* src/templates/virtual-object-page.js */\n\nimport React, { useState } from 'react';\nimport Helmet from 'react-helmet';\n\nimport Navigation from '~/components/molecules/navigation';\nimport Leporello from '~/components/atoms/leporello';\nimport LeporelloGraphicDetailsItem from '~/components/organisms/leporello-graphic-details-item';\nimport LeporelloGraphicReprintsItem from '~/components/organisms/leporello-graphic-reprints-item';\nimport LeporelloArtefactRelatedWorksItem from '~/components/organisms/leporello-artefact-related-works-item';\nimport LeporelloGraphicRealItem from '~/components/organisms/leporello-graphic-real-item';\n\nimport i18n from '~/i18n';\n\n\nconst PageTemplate = ({ pageContext, location }) => {\n  const graphic = pageContext;\n  const title = (graphic.titles[0] && graphic.titles[0].title) || '';\n\n  i18n(graphic.langCode);\n\n  const [selectedReprintItem, setSelectedReprintItem] = useState(null);\n\n  return (\n    <div\n      className=\"template\"\n      data-template=\"virtual-object-page\"\n    >\n      <Helmet>\n        <title>Grafiken | {title} | Virtual</title>\n      </Helmet>\n\n      <Navigation\n        goBackTo={`/${graphic.langCode}`}\n      />\n\n      <section className=\"body\">\n        <Leporello>\n          <LeporelloGraphicDetailsItem graphic={graphic} location={location.href} />\n          {selectedReprintItem\n            ? (\n              <LeporelloGraphicRealItem\n                graphic={selectedReprintItem}\n                onClose={() => setSelectedReprintItem(null)}\n              />\n            )\n            : (\n              <LeporelloGraphicReprintsItem\n                reprints={graphic.references.reprints}\n                onItemClick={setSelectedReprintItem}\n              />\n            )\n          }\n\n          {graphic.references.relatedWorks.length > 0\n            && (\n              <LeporelloArtefactRelatedWorksItem\n                relatedWorks={graphic.references.relatedWorks}\n              />\n            )\n          }\n        </Leporello>\n      </section>\n    </div>\n  );\n};\n\nexport default PageTemplate;\n"],"sourceRoot":""}