{"version":3,"sources":["webpack:///./src/components/molecules/artefact-card/index.js","webpack:///./src/components/molecules/artefact-card/artefact-card.jsx","webpack:///./src/components/molecules/artefact-line/index.js","webpack:///./src/components/molecules/artefact-line/artefact-line.jsx","webpack:///./src/components/organisms/artefact-overview/artefact-overview.jsx","webpack:///./src/components/organisms/artefact-overview/index.js","webpack:///./src/libs/transformers/graphic.js","webpack:///./src/cranach.config.js","webpack:///./src/pages/index.de.jsx"],"names":["ArtefactCard","title","subtitle","date","to","imgSrc","imgAlt","classification","className","data-component","triggersInternalTransition","internalTransitionDirection","src","alt","modifierWithBox","ArtefactLine","masterData","printProcess","dimensions","CardView","type","icon","CardSmallView","ListView","SupportedViews","DefaultView","ArtefactOverview","items","view","data-active-view","map","item","key","inventoryNumber","titleShort","Switcher","handleChange","currentView","Item","onClick","titleLength","cranachCfg","getRepresentativeImage","emptyImageType","infos","maxDimensions","width","height","images","reduce","acc","size","imageType","representative","overall","length","flattenGraphQlEdges","rawItems","edges","edge","push","node","byImageExistence","toArtefact","inventor","involvedPersons","find","person","role","classificationLevel2","objectName","replace","titles","substr","representativeImage","small","name","dating","dated","metadata","langCode","slug","toAddedRepresentativeImage","module","exports","data","i18n","graphic","allGraphicsJson","useState","currentArtefactView","setCurrentArtefactView","data-page"],"mappings":"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","file":"component---src-pages-index-de-jsx-b178ca4a69cb09242f6e.js","sourcesContent":["import ArtefactCard from './artefact-card';\n\nexport default ArtefactCard;\n","import React from 'react';\n\nimport Image from '~/components/atoms/image';\nimport Link from '~/components/atoms/link';\n\nimport './artefact-card.scss';\n\nexport default ({\n  title = '',\n  subtitle = '',\n  date = '',\n  to = '',\n  imgSrc = '',\n  imgAlt = '',\n  classification = '',\n}) => (\n    <div\n      className=\"artefact-card\"\n      data-component=\"molecules/artefact-card\"\n    >\n      <div className=\"card-image\">\n        <Link\n          to={to}\n          triggersInternalTransition={true}\n          internalTransitionDirection='left'\n        >\n          <Image\n            src={imgSrc}\n            alt={imgAlt}\n            modifierWithBox={true}\n\n          />\n        </Link>\n      </div>\n      {title\n        && (\n          <div className=\"artefact-card__content\">\n            <Link\n              to={to}\n              triggersInternalTransition={true}\n              internalTransitionDirection='left'\n            >\n              <h2 className=\"artefact-card__title\">{title}, {date}</h2>\n              <p className=\"artefact-card__subtitle\">{classification}</p>\n              <p className=\"artefact-card__subtitle\">{subtitle}</p>\n            </Link>\n          </div>\n        )\n      }\n    </div>\n);\n","import ArtefactLine from './artefact-line';\n\nexport default ArtefactLine;\n","import React from 'react';\n\nimport Image from '~/components/atoms/image';\nimport Link from '~/components/atoms/link';\n\nimport './artefact-line.scss';\n\nexport default ({\n  title = '',\n  subtitle = '',\n  date = '',\n  to = '',\n  masterData = '',\n  imgSrc = '',\n  imgAlt = '',\n}) => (\n    <div\n      className=\"artefact-line\"\n      data-component=\"molecules/artefact-line\"\n    >\n      <div className=\"artefact-line__image\">\n        <Link\n          to={to}\n          triggersInternalTransition={true}\n          internalTransitionDirection='left'\n        >\n          <Image\n            src={imgSrc}\n            alt={imgAlt}\n            modifierWithBox={true} // -has-box artefact-line-image\n          />\n        </Link>\n      </div>\n\n      <div className=\"artefact-line__content\">\n        <Link\n          to={to}\n          triggersInternalTransition={true}\n          internalTransitionDirection='left'\n        >\n          <h2 className=\"artefact-line__title\">{title}, {date}</h2>\n          <h3 className=\"artefact-line__subtitle\">{subtitle}</h3>\n          <ul className=\"artefact-line__master-data\">\n            <li>\n              {masterData.classification.classification}, {masterData.classification.printProcess}\n            </li>\n            <li>{masterData.dimensions}</li>\n          </ul>\n        </Link>\n      </div>\n\n    </div>\n);\n","import React from 'react';\n\nimport Switcher from '~/components/atoms/switcher';\nimport ArtefactCard from '~/components/molecules/artefact-card';\nimport ArtefactLine from '~/components/molecules/artefact-line';\n\nimport './artefact-overview.scss';\n\nconst CardView = {\n  type: 'card',\n  icon: 'view_column',\n};\n\nconst CardSmallView = {\n  type: 'card-small',\n  icon: 'view_module',\n};\n\nconst ListView = {\n  type: 'list',\n  icon: 'view_list',\n};\n\nconst SupportedViews = [\n  CardView,\n  CardSmallView,\n  ListView,\n];\n\nconst DefaultView = CardView;\n\nconst ArtefactOverview = ({\n  items = [],\n  view = DefaultView,\n}) => (\n    <div\n\n    className=\"artefact-overview\"\n    data-component=\"organisms/artefact-overview\"\n    data-active-view={ view.type }\n  >\n    {\n        items.map((item) => (<div\n          key={ item.inventoryNumber }\n          className=\"overview-item\"\n        >\n        { CardView === view && <ArtefactCard\n            title={ item.titleShort }\n            subtitle={ item.subtitle }\n            date={ item.date }\n            to={item.to}\n            classification={item.classification}\n            imgSrc={ item.imgSrc }\n          />\n        }\n\n          { CardSmallView === view && <ArtefactCard\n            to={ item.to }\n            imgSrc={ item.imgSrc }\n          />\n          }\n\n        { ListView === view && <ArtefactLine\n            title={ item.title }\n            subtitle={ item.subtitle }\n            date={item.date}\n            masterData={item.masterData}\n            classification={item.classification}\n            to={ item.to }\n            imgSrc={ item.imgSrc }\n          />\n        }\n        </div>\n        ))\n    }\n  </div>\n);\n\nArtefactOverview.Switcher = ({\n  view = DefaultView,\n  handleChange = () => {},\n}) => (\n  <Switcher className=\"artefact-overview-switcher\" >\n    { SupportedViews.map((currentView) => (\n      <Switcher.Item\n        key={ currentView.type }\n      >\n        <i\n          className={ `material-icons artefact-overview-switcher-item-icon ${(currentView === view) ? 'is-active' : ''}` }\n          onClick={ () => handleChange(currentView) }\n        >{ currentView.icon }</i>\n      </Switcher.Item>\n    )) }\n  </Switcher>\n);\n\nArtefactOverview.DefaultView = DefaultView;\n\nexport default ArtefactOverview;\n","import ArtefactOverview from './artefact-overview';\n\nexport default ArtefactOverview;\n","import cranachCfg from '~/cranach.config';\n\nconst { titleLength } = cranachCfg;\n\nconst getRepresentativeImage = (item) => {\n  const emptyImageType = {\n    infos: {\n      maxDimensions: {\n        width: 0,\n        height: 0,\n      },\n    },\n    images: [\n      ['xsmall', 'small', 'medium', 'origin'].reduce(\n        (acc, size) => {\n          acc[size] = { src: '', dimensions: { width: 0, height: 0 } };\n          return acc;\n        },\n        {},\n      ),\n    ],\n  };\n  const imageType = item.images.representative || item.images.overall || emptyImageType;\n\n  return imageType.images[imageType.images.length - 1];\n};\n\nexport default {\n  flattenGraphQlEdges(rawItems) {\n    return rawItems.edges.reduce((acc, edge) => {\n      acc.push(...edge.node.items);\n      return acc;\n    }, []);\n  },\n\n  byImageExistence(item) {\n    return !!item.images;\n  },\n\n  toArtefact(item) {\n    const inventor = item.involvedPersons.find((person) => person.role === 'Inventor');\n    const classificationLevel2 = (item.objectName) ? item.objectName.replace(/:.*/, '') : false;\n    const classification = (item.objectName) ? `${item.classification.classification}, ${classificationLevel2}` : item.classification.classification;\n    const title = (item.titles[0] && item.titles[0].title) || '';\n    const titleShort = (title.length > titleLength) ? `${title.substr(0, titleLength)}…` : title;\n\n    const imgSrc = item.representativeImage.small.src || '';\n\n    return {\n      inventoryNumber: item.inventoryNumber,\n      title,\n      titleShort,\n      subtitle: inventor ? inventor.name : ' ',\n      date: item.dating.dated || '',\n      masterData: item,\n      classification,\n      to: `/${item.metadata.langCode}/${item.slug}`,\n      imgSrc,\n    };\n  },\n\n  toAddedRepresentativeImage(item) {\n    return {\n      ...item,\n      representativeImage: getRepresentativeImage(item),\n    };\n  },\n};\n","module.exports = {\n  titleLength: 48, // Anzahl der Zeichen beim gekürzten Titel\n};\n","import React, { useState } from 'react';\nimport Helmet from 'react-helmet';\n\nimport { graphql } from 'gatsby';\n\nimport Navigation from '~/components/molecules/navigation';\nimport ArtefactOverview from '~/components/organisms/artefact-overview';\n\nimport graphic from '~/libs/transformers/graphic';\n\nimport i18n from '~/i18n';\n\nexport default ({ data }) => {\n  i18n('de');\n\n  const items = graphic.flattenGraphQlEdges(data.allGraphicsJson)\n    .map((item) => ({ ...item, images: {} }))\n    // .filter(graphic.byImageExistence)\n    .map(graphic.toAddedRepresentativeImage)\n    .map(graphic.toArtefact);\n\n  const [currentArtefactView, setCurrentArtefactView] = useState(ArtefactOverview.DefaultView);\n\n  return (\n    <div\n      className=\"page\"\n      data-page=\"index.de\"\n    >\n      <Helmet>\n        <title>Cranach Digital Archive | Home</title>\n      </Helmet>\n\n      <div\n        className=\"page-dark\"\n      >\n        <Navigation>\n          <ArtefactOverview.Switcher\n            view={ currentArtefactView }\n            handleChange={ setCurrentArtefactView }\n          />\n        </Navigation>\n\n        <main\n          className=\"main-content\"\n        >\n          <ArtefactOverview\n            view={ currentArtefactView }\n            items={ items }\n          />\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport const query = graphql`\n  query GermanVirtualCranachGraphicObjects {\n    allGraphicsJson(filter: {\n      items: {\n        elemMatch: {\n          metadata: {\n            langCode: { eq: \"de\" }\n          },\n          isVirtual: { eq: true }\n        }\n      }\n    }) {\n      edges {\n        node {\n          items {\n            metadata {\n              langCode\n            }\n            slug\n            objectName\n            inventoryNumber\n            objectId\n            dimensions\n            dating {\n              dated\n            }\n            isVirtual\n            sortingNumber\n            titles {\n              remarks\n              title\n              type\n            }\n            classification {\n              classification\n              condition\n              printProcess\n            }\n            references {\n              reprints {\n                inventoryNumber\n              }\n              relatedWorks {\n                inventoryNumber\n              }\n            }\n            involvedPersons {\n              name\n              role\n            }\n            exhibitionHistory\n            catalogWorkReferences {\n              description\n              referenceNumber\n              remarks\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}