{"version":3,"sources":["webpack:///./src/components/molecules/involved-persons-list/index.js","webpack:///./src/components/molecules/involved-persons-list/involved-persons-list.jsx","webpack:///./src/components/atoms/copy-text/index.js","webpack:///./src/components/atoms/copy-text/copy-text.jsx","webpack:///./src/components/organisms/leporello-graphic-details-item/leporello-graphic-details-item.jsx","webpack:///./src/components/organisms/leporello-graphic-details-item/index.js","webpack:///./src/components/molecules/graphics-list/index.js","webpack:///./src/components/molecules/graphics-list/graphics-list.jsx","webpack:///./src/components/organisms/leporello-graphic-reprints-item/leporello-graphic-reprints-item.jsx","webpack:///./src/components/organisms/leporello-graphic-reprints-item/index.js","webpack:///./src/components/organisms/leporello-artefact-related-works-item/leporello-artefact-related-works-item.jsx","webpack:///./src/components/organisms/leporello-artefact-related-works-item/index.js","webpack:///./src/templates/virtual-object-page.jsx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.number.max-safe-integer.js"],"names":["InvolvedPersonsTable","data","items","map","item","idx","className","key","alternativeName","role","remarks","CopyText","text","split","i","LeporelloGraphicDetailsItem","location","graphic","visibleCloser","initiallyOpen","t","useTranslation","translations","title","titles","description","images","dating","dimensions","involvedPersons","inventoryNumber","signature","catalogWorkReferences","publications","classification","objectName","sortingWeight","name","pos","getPatternPos","str","foundSortingWeight","find","sw","Number","MAX_SAFE_INTEGER","catalogWorkReferenceItems","sort","a","b","reference","term","catalogWorkReferenceName","definition","referenceNumber","useState","additionalClassNames","setAdditionalClassNames","isOpen","setIsOpen","useEffect","join","data-component","onToggle","visibleToggler","closerType","src","sizes","l","alt","modifierWithBox","Entry","dated","length","GraphicsList","onItemClick","imgSrc","to","triggersInternalTransition","onClick","e","preventLinkFollowing","preventDefault","classNamePrefix","caption","LeporelloGraphicReprintsItem","reprints","limitItemsTo","reprintItems","reprintItem","ref","owner","langCode","slug","s","conditionLevel","limitReprintItems","setLimitReprintItems","innerHandleItemClick","foundSelectedItem","refItem","reprintConditionLevelGroups","id","subtitle","filter","reprintRefItem","includes","conditionLevelGroup","group","atLeastOneGroupHasMoreReprintItemsThanLimit","some","reprintGroup","slice","LeporelloArtefactRelatedWorksItem","relatedWorks","relatedWorkItemsLimit","hasMoreRelatedWorkItemsThanLimit","relatedWorksItems","relatedWorksItem","limitRelatedWorkItems","setLimitRelatedWorkItems","PageTemplate","pageContext","i18n","selectedReprintItem","setSelectedReprintItem","data-template","goBackTo","href","onClose","references","$export","S"],"mappings":"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","file":"component---src-templates-virtual-object-page-jsx-79935b443129420efdef.js","sourcesContent":["import InvolvedPersonsTable from './involved-persons-list';\n\nexport default InvolvedPersonsTable;\n","import React from 'react';\n\nimport './involved-persons-list.scss';\n\nexport default ({\n  data = [],\n}) => {\n  const items = data.map(\n    (item, idx) => (\n      <li className=\"involved-persons-list__item\" key={idx}>\n        {item.alternativeName}, {item.role} {(item.remarks) ? <span className=\"remarks\">{item.remarks}</span> : ''}\n      </li>\n    ),\n  );\n  return (\n    <ul\n      className=\"involved-persons-list\">\n      {items}\n    </ul>);\n};\n","import CopyText from './copy-text';\n\nexport default CopyText;\n","\nimport React from 'react';\n\nimport './copy-text.scss';\n\n\nexport default ({\n  text,\n}) => (\n  <div\n    className=\"copy-text\"\n  >\n    { text.split('\\n').map((item, i) => <p key={i}>{ item || '\\u200B' }</p>) }\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from '~/i18n';\n\nimport LeporelloGraphicItem from '~/components/molecules/leporello-graphic-item';\nimport DefinitionList from '~/components/atoms/definition-list';\nimport InvolvedPersonsList from '~/components/molecules/involved-persons-list';\nimport LiteratureTable from '~/components/molecules/literature-table';\nimport CopyText from '~/components/atoms/copy-text';\nimport Image from '~/components/atoms/image';\n\nimport translations from './translations.json';\nimport './leporello-graphic-details-item.scss';\n\nexport default ({\n  location,\n  graphic,\n  visibleCloser = true,\n  initiallyOpen = false,\n  className = '',\n}) => {\n  const { t } = useTranslation('LeporelloGraphicDetailsItem', translations);\n\n  /* Prepare main and important object infos for usage */\n  // const inventor = graphic.involvedPersons.find(person => person.role === 'Inventor');\n\n  const title = (graphic.titles[0] && graphic.titles[0].title) || '';\n  // const subtitle = inventor ? inventor.name : ' ';\n  const description = graphic.description || ' ';\n\n  const {\n    images,\n    dating,\n    dimensions,\n    involvedPersons,\n    inventoryNumber,\n    signature,\n    catalogWorkReferences,\n    publications,\n    classification,\n    objectName,\n  } = graphic;\n\n  /* Sorting catalogWorkReferences */\n  const sortingWeight = [\n    {\n      name: 'Bartsch',\n      pos: 1,\n    },\n    {\n      name: 'Hollstein',\n      pos: 2,\n    },\n    {\n      name: 'GND',\n      pos: 3,\n    },\n  ];\n  const getPatternPos = (str) => {\n    const foundSortingWeight = sortingWeight.find(sw => str === sw.name);\n\n    return foundSortingWeight ? foundSortingWeight.pos : Number.MAX_SAFE_INTEGER;\n  };\n  const sortedCatalogWorkReferences = catalogWorkReferences.sort(\n    (a, b) => getPatternPos(b.description) - getPatternPos(a.description),\n  );\n\n  /* Map catalog work references */\n  const catalogWorkReferenceItems = sortedCatalogWorkReferences.map(\n    reference => ({\n      term: t('{{catalogWorkReferenceName}}-No', { catalogWorkReferenceName: reference.description }),\n      definition: reference.referenceNumber,\n    }),\n  );\n\n  const [additionalClassNames, setAdditionalClassNames] = useState([]);\n  const [isOpen, setIsOpen] = useState(!!initiallyOpen);\n\n  /* React on isOpen change */\n  useEffect(() => {\n    setIsOpen(!!initiallyOpen);\n  }, [initiallyOpen]);\n\n  /* React on additional classnames change and open / close toggle */\n  useEffect(() => {\n    setAdditionalClassNames([\n      ...className.split(' '),\n      /*\n        We add an extra classname, if the leporello item was opened,\n        to be able to react to it on style level\n      */\n      ...(isOpen ? ['-is-open'] : []),\n    ]);\n  }, [className, isOpen]);\n\n  return (\n    <LeporelloGraphicItem\n      className={`leporello-graphic-details-item-wrap ${additionalClassNames.join(' ')}`}\n      data-component=\"organisms/leporello-graphic-details-item\"\n      initiallyOpen={isOpen}\n      onToggle={setIsOpen}\n      visibleToggler={visibleCloser}\n      closerType=\"with-cover\"\n    >\n      <div className={`leporello-graphic-details-item ${additionalClassNames.join(' ')}`}>\n        <header className=\"leporello-graphic-details-item__header\">\n\n          <h1 className=\"title\">{title}</h1>\n          <h2 className=\"subtitle\">\n            {classification.classification}, {objectName}\n          </h2>\n        </header>\n\n        <div className=\"leporello-graphic-details-item__content\">\n          <div className={'leporello-graphic-details-item__content-image'}>\n            <Image\n              src={images.sizes.l.src}\n              alt={title}\n              modifierWithBox={false}\n            />\n          </div>\n          <div className=\"leporello-graphic-details-item__content-info\">\n            <header className=\"leporello-graphic-details-item__content-info-header\">\n              <h2 className=\"chapter\">{t('Master Data')}</h2>\n            </header>\n            <div className=\"leporello-graphic-details-item__content-info-content\">\n              <div className=\"column\">\n                <CopyText\n                  text={description}\n                />\n              </div>\n\n              <div className=\"column\">\n                <DefinitionList>\n                  <DefinitionList.Entry\n                    term={t('Attribution')}\n                    definition={<InvolvedPersonsList data={involvedPersons} />}\n                  />\n                  <DefinitionList.Entry\n                    term={t('Production date')}\n                    definition={`${dating.dated} ${dating.remarks}`}\n                  />\n\n\n                  <DefinitionList.Entry\n                    term={t('Dimensions')}\n                    definition={dimensions}\n                  />\n                  {signature && <DefinitionList.Entry\n                    term={t('Signature')}\n                    definition={signature}\n                  />\n                  }\n\n\n                  {\n                    catalogWorkReferenceItems.map(\n                      item => (\n                        <DefinitionList.Entry\n                          key={item.term}\n                          term={item.term}\n                          definition={item.definition}\n                        />\n                      ),\n                    )\n                  }\n\n                  <DefinitionList.Entry\n                    term=\"CDA ID\"\n                    definition={inventoryNumber}\n                  />\n                  <DefinitionList.Entry\n                    term={t('Persistent Link')}\n                    definition={location}\n                  />\n\n                </DefinitionList>\n\n                {publications.length > 0\n                  && <DefinitionList>\n                    <DefinitionList.Entry\n                      term={t('Literature')}\n                      definition={<LiteratureTable data={publications} />}\n                    />\n                  </DefinitionList>\n                }\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </LeporelloGraphicItem>\n  );\n};\n","import LeporelloGraphicDetailsItem from './leporello-graphic-details-item';\n\nexport default LeporelloGraphicDetailsItem;\n","import GraphicsList from './graphics-list';\n\nexport default GraphicsList;\n","import React from 'react';\n\nimport Link from '~/components/atoms/link';\nimport Image from '~/components/atoms/image';\n\nimport './graphics-list.scss';\n\nexport default ({\n  items,\n  onItemClick,\n}) => (\n    <ul\n      className=\"graphics-list\"\n      data-component=\"molecules/graphics-list\"\n    >\n      {\n        items.map(\n          item => <li\n            key={item.imgSrc}\n            className=\"graphics-list-item\"\n          >\n            <Link\n              to={item.to}\n              triggersInternalTransition={!!item.triggersInternalTransition}\n              onClick={(e) => {\n                if (item.preventLinkFollowing) {\n                  if ((typeof onItemClick) === 'function') {\n                    onItemClick(item);\n                  }\n                  e.preventDefault();\n                  return false;\n                }\n\n                return true;\n              }}\n            >\n              <Image\n                src={item.imgSrc}\n                alt={item.title}\n                classNamePrefix={'graphics-list-item__image'}\n                caption={item.title}\n                modifierWithBox={true}\n              />\n            </Link>\n          </li>,\n        )\n      }\n    </ul>\n\n);\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from '~/i18n';\n\nimport LeporelloGraphicItem from '~/components/molecules/leporello-graphic-item';\nimport GraphicsList from '~/components/molecules/graphics-list';\n\nimport translations from './translations.json';\nimport './leporello-graphic-reprints-item.scss';\n\nexport default ({\n  reprints,\n  className = '',\n  onItemClick = () => {},\n  limitItemsTo = 5,\n}) => {\n  const { t } = useTranslation('LeporelloGraphicReprintsItem', translations);\n\n  /* Map reprints */\n  const reprintItems = reprints.map((reprintItem) => {\n    const item = reprintItem.ref;\n\n    return {\n      inventoryNumber: item.inventoryNumber,\n      title: [item.dating.dated, item.owner],\n      to: `/${item.langCode}/${item.slug}`,\n      imgSrc: (item && item.images && item.images.sizes.s && item.images.sizes.s.src),\n      preventLinkFollowing: true,\n      conditionLevel: item.conditionLevel,\n    };\n  });\n\n  const [additionalClassNames, setAdditionalClassNames] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [limitReprintItems, setLimitReprintItems] = useState(!isOpen);\n\n  /* React on additional classnames changes */\n  useEffect(() => {\n    setAdditionalClassNames([\n      ...className.split(' '),\n    ]);\n  }, [className, isOpen]);\n\n  /* React on open / close toggle */\n  useEffect(() => {\n    setLimitReprintItems(!isOpen);\n  }, [isOpen]);\n\n  const innerHandleItemClick = (item) => {\n    const foundSelectedItem = reprints.find(\n      refItem => refItem.inventoryNumber === item.inventoryNumber,\n    );\n\n    if (foundSelectedItem && (typeof onItemClick) === 'function') {\n      onItemClick(foundSelectedItem.ref);\n    }\n  };\n\n  const expectedReprintConditionLevelGroups = [\n    {\n      id: '1st-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '1st state',\n        description: '1st state description',\n      },\n      filter: reprintRefItem => reprintRefItem && [0, 1].includes(reprintRefItem.conditionLevel),\n      items: [],\n    },\n    {\n      id: '2nd-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '2nd state',\n        description: '2nd state description',\n      },\n      filter: reprintRefItem => reprintRefItem && reprintRefItem.conditionLevel === 2,\n      items: [],\n    },\n    {\n      id: '3rd-state',\n      translations: {\n        title: 'Impressions',\n        subtitle: '3rd state',\n        description: '3rd state description',\n      },\n      filter: reprintRefItem => reprintRefItem && reprintRefItem.conditionLevel === 3,\n      items: [],\n    },\n  ];\n\n  const reprintConditionLevelGroups = expectedReprintConditionLevelGroups.map(\n    conditionLevelGroup => ({\n      ...conditionLevelGroup,\n      items: reprintItems.filter(\n        conditionLevelGroup.filter,\n      ),\n    }),\n  ).filter(group => group.items.length > 0);\n\n  /* Toggler should be visible if at least one group has more items\n    as the given initial limit allows */\n  const atLeastOneGroupHasMoreReprintItemsThanLimit = reprintConditionLevelGroups.some(\n    group => group.items.length > limitItemsTo,\n  );\n\n  return (\n    <LeporelloGraphicItem\n      className={`leporello-graphic-reprints-item-wrap ${additionalClassNames.join(' ')}`}\n      data-component=\"organisms/leporello-graphic-reprints-item\"\n      initiallyOpen={isOpen}\n      onToggle={setIsOpen}\n      visibleToggler={atLeastOneGroupHasMoreReprintItemsThanLimit}\n    >\n      {reprintConditionLevelGroups.map((reprintGroup, idx) => (\n        <div\n          key={reprintGroup.id}\n          className=\"leporello-graphic-reprints-item\"\n        >\n            <div className=\"leporello-graphic-reprints-item-intro\">\n              { idx === 0\n                && (\n                  <h2 className=\"chapter\">\n                    {t(reprintGroup.translations.title)}\n                  </h2>\n                )\n              }\n              <h3 className=\"headline\">{t(reprintGroup.translations.subtitle)}</h3>\n\n            </div>\n            <div className=\"leporello-graphic-reprints-item-list\">\n              <GraphicsList\n                items={\n                  limitReprintItems\n                    ? reprintGroup.items.slice(0, limitItemsTo)\n                    : reprintGroup.items\n                }\n                onItemClick={ innerHandleItemClick }\n              />\n            </div>\n          </div>\n      ))}\n    </LeporelloGraphicItem>\n  );\n};\n","import LeporelloGraphicReprintsItem from './leporello-graphic-reprints-item';\n\nexport default LeporelloGraphicReprintsItem;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from '~/i18n';\n\nimport LeporelloGraphicItem from '~/components/molecules/leporello-graphic-item';\nimport GraphicsList from '~/components/molecules/graphics-list';\n\nimport translations from './translations.json';\nimport './leporello-artefact-related-works-item.scss';\n\nexport default ({\n  relatedWorks,\n  className = '',\n  limitItemsTo = 5,\n}) => {\n  const { t } = useTranslation('LeporelloArtefactRelatedWorksItem', translations);\n\n  /* Number of initial visible related works items */\n  const relatedWorkItemsLimit = limitItemsTo;\n  const hasMoreRelatedWorkItemsThanLimit = relatedWorks.length > relatedWorkItemsLimit;\n\n  /* Map related works */\n  const relatedWorksItems = relatedWorks.map((relatedWorksItem) => {\n    const item = relatedWorksItem.ref;\n\n    return {\n      inventoryNumber: item.inventoryNumber,\n      title: `${item.titles[0].title}, ${item.dating.dated}`,\n      to: `/${item.langCode}/${item.slug}`,\n      imgSrc: (item && item.images && item.images.sizes.s && item.images.sizes.s.src),\n      preventLinkFollowing: false,\n      triggersInternalTransition: true,\n    };\n  });\n\n  const [additionalClassNames, setAdditionalClassNames] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [limitRelatedWorkItems, setLimitRelatedWorkItems] = useState(!isOpen);\n\n  /* React on additional classnames changes */\n  useEffect(() => {\n    setAdditionalClassNames([\n      ...className.split(' '),\n    ]);\n  }, [className, isOpen]);\n\n  /* React on open / close toggle */\n  useEffect(() => {\n    setLimitRelatedWorkItems(!isOpen);\n  }, [isOpen]);\n\n  return (\n    <LeporelloGraphicItem\n      className={`leporello-artefact-related-works-item-wrap ${additionalClassNames.join(' ')}`}\n      data-component=\"organisms/leporello-artefact-related-works-item\"\n      initiallyOpen={isOpen}\n      onToggle={setIsOpen}\n      visibleToggler={hasMoreRelatedWorkItemsThanLimit}\n\n    >\n      <div className=\"leporello-artefact-related-works-item\">\n        <div className=\"leporello-artefact-related-works-item-intro\">\n          <h2 className=\"chapter\">{t('Related works')}</h2>\n        </div>\n        <div className=\"leporello-artefact-related-works-item-list\">\n          <GraphicsList\n            items={\n              limitRelatedWorkItems\n                ? relatedWorksItems.slice(0, relatedWorkItemsLimit)\n                : relatedWorksItems\n            }\n          />\n        </div>\n      </div>\n    </LeporelloGraphicItem>\n  );\n};\n","import LeporelloArtefactRelatedWorksItem from './leporello-artefact-related-works-item';\n\nexport default LeporelloArtefactRelatedWorksItem;\n","/* src/templates/virtual-object-page.js */\n\nimport React, { useState } from 'react';\nimport Helmet from 'react-helmet';\n\nimport Navigation from '~/components/molecules/navigation';\nimport Leporello from '~/components/atoms/leporello';\nimport LeporelloGraphicDetailsItem from '~/components/organisms/leporello-graphic-details-item';\nimport LeporelloGraphicReprintsItem from '~/components/organisms/leporello-graphic-reprints-item';\nimport LeporelloArtefactRelatedWorksItem from '~/components/organisms/leporello-artefact-related-works-item';\nimport LeporelloGraphicRealItem from '~/components/organisms/leporello-graphic-real-item';\n\nimport i18n from '~/i18n';\n\n\nconst PageTemplate = ({ pageContext, location }) => {\n  const graphic = pageContext;\n  const title = (graphic.titles[0] && graphic.titles[0].title) || '';\n\n  i18n(graphic.langCode);\n\n  const [selectedReprintItem, setSelectedReprintItem] = useState(null);\n\n  return (\n    <div\n      className=\"template\"\n      data-template=\"virtual-object-page\"\n    >\n      <Helmet>\n        <title>Grafiken | {title} | Virtual</title>\n      </Helmet>\n\n      <Navigation\n        goBackTo={`/${graphic.langCode}`}\n      />\n\n      <section className=\"body\">\n        <Leporello>\n          <LeporelloGraphicDetailsItem graphic={graphic} location={location.href} />\n          {selectedReprintItem\n            ? (\n              <LeporelloGraphicRealItem\n                graphic={selectedReprintItem}\n                onClose={() => setSelectedReprintItem(null)}\n              />\n            )\n            : (\n              <LeporelloGraphicReprintsItem\n                reprints={graphic.references.reprints}\n                onItemClick={setSelectedReprintItem}\n              />\n            )\n          }\n\n          {graphic.references.relatedWorks.length > 0\n            && (\n              <LeporelloArtefactRelatedWorksItem\n                relatedWorks={graphic.references.relatedWorks}\n              />\n            )\n          }\n        </Leporello>\n      </section>\n    </div>\n  );\n};\n\nexport default PageTemplate;\n","// 20.1.2.6 Number.MAX_SAFE_INTEGER\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });\n"],"sourceRoot":""}