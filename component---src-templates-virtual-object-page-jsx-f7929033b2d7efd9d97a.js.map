{"version":3,"sources":["webpack:///./src/components/molecules/graphics-list/index.js","webpack:///./src/components/molecules/graphics-list/graphics-list.jsx","webpack:///./src/components/organisms/leporello-graphic-reprints-item/leporello-graphic-reprints-item.jsx","webpack:///./src/components/organisms/leporello-graphic-reprints-item/index.js","webpack:///./src/components/organisms/leporello-graphic-related-works-item/leporello-graphic-related-works-item.jsx","webpack:///./src/components/organisms/leporello-graphic-related-works-item/index.js","webpack:///./src/templates/virtual-object-page.jsx"],"names":["GraphicsList","items","className","data-component","map","item","key","imgSrc","to","src","alt","title","classNamePrefix","caption","LeporelloGraphicReprintsItem","graphic","description","hasMoreReprintItemsThanLimit","references","length","reprintItems","reprintItem","ref","owner","langCode","slug","image","small","useState","additionalClassNames","setAdditionalClassNames","isOpen","setIsOpen","limitReprintItems","setLimitedReprintItems","useEffect","split","join","initiallyOpen","onToggle","visibleToggler","text","slice","LeporelloGraphicRelatedWorksItem","PageTemplate","pageContext","titles","data-template"],"mappings":"gUAEeA,G,UCKA,gBACbC,EADa,EACbA,MADa,OAGX,wBACEC,UAAU,gBACVC,iBAAe,2BAGbF,EAAMG,KACJ,SAAAC,GAAI,OAAI,wBACNC,IAAKD,EAAKE,OACVL,UAAU,sBAEV,kBAAC,IAAD,CAAMM,GAAIH,EAAKG,IACb,kBAAC,IAAD,CACEC,IAAKJ,EAAKE,OACVG,IAAKL,EAAKM,MACVC,gBAAiB,qBACjBC,QAASR,EAAKM,gB,+VChBf,ICPAG,EDOA,YAIR,IAHLC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,qKAEV,MADJd,iBACI,MADQ,GACR,EAGEe,EAA+BF,EAAQG,WAAWC,OAD9B,EAIpBC,EAAeL,EAAQG,WAAWd,KAAI,SAACiB,GAC3C,IAAMhB,EAAOgB,EAAYC,IAEzB,MAAO,CACLX,MAAON,EAAKkB,OAAS,GACrBf,GAAG,IAAKH,EAAKmB,SAAX,IAAuBnB,EAAKoB,KAC9BlB,OAASF,GAAQA,EAAKqB,OAASrB,EAAKqB,MAAMC,UAZ1C,EAgBoDC,mBAAS,IAA1DC,EAhBH,KAgByBC,EAhBzB,OAiBwBF,oBAAS,GAA9BG,EAjBH,KAiBWC,EAjBX,OAkBgDJ,oBAAUG,GAAvDE,EAlBH,KAkBsBC,EAlBtB,KAgCJ,OAXAC,qBAAU,WACRL,EAAwB,EACnB5B,EAAUkC,MAAM,SAEpB,CAAClC,EAAW6B,IAGfI,qBAAU,WACRD,GAAwBH,KACvB,CAACA,IAGF,kBAAC,IAAD,CACE7B,UAAS,mCAAsC2B,EAAqBQ,KAAK,KACzElC,iBAAe,4CACfmC,cAAgBP,EAChBQ,SAAWP,EACXQ,eAAiBvB,GAEjB,yBAAKf,UAAU,yCACb,wBAAIA,UAAU,WAAd,UACA,wBAAIA,UAAU,YAAd,cACA,kBAAC,IAAD,CACEuC,KAAOzB,KAGX,yBAAKd,UAAU,wCAGb,kBAAC,EAAD,CACED,MACEgC,EACIb,EAAasB,MAAM,EAnDP,GAoDZtB,O,+VE5DD,ICLAuB,EDKA,YAER,IAAD,IADJzC,iBACI,MADQ,GACR,IACoD0B,mBAAS,IAA1DC,EADH,KACyBC,EADzB,OAEwBF,oBAAS,GAA9BG,EAFH,KAEWC,EAFX,KAgBJ,OAXAG,qBAAU,WACRL,EAAwB,GAAD,SAClB5B,EAAUkC,MAAM,MADE,EAMjBL,EAAS,CAAC,0BAA4B,QAE3C,CAAC7B,EAAW6B,IAGb,kBAAC,IAAD,CACE7B,UAAS,wCAA2C2B,EAAqBQ,KAAK,KAC9ElC,iBAAe,iDACfmC,cAAgBP,EAChBQ,SAAWP,GAEX,yBAAK9B,UAAU,WACb,yBAAKA,UAAU,+BACb,uBAAGA,UAAU,eAAb,mTASF,yBAAKA,UAAU,UACb,kBAAC,EAAD,CAAcD,MAAQ,SELjB2C,UA3BM,SAAC,GAAqB,IACnC7B,EADkC,EAAlB8B,YAGhBlC,EAASI,EAAQ+B,OAAO,IAAM/B,EAAQ+B,OAAO,GAAGnC,OAAU,GAEhE,OACE,yBACET,UAAU,OACV6C,gBAAc,QAEd,kBAAC,IAAD,KACE,6CAAoBpC,EAApB,eAGF,kBAAC,IAAD,MAEA,6BAAST,UAAU,QACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAA6Ba,QAAUA,IACvC,kBAAC,EAAD,CAA8BA,QAAUA,IACxC,kBAAC,EAAD,CAAkCA,QAAUA","file":"component---src-templates-virtual-object-page-jsx-f7929033b2d7efd9d97a.js","sourcesContent":["import GraphicsList from './graphics-list';\n\nexport default GraphicsList;\n","import React from 'react';\n\nimport Link from '~/components/atoms/link';\nimport Image from '~/components/atoms/image';\n\nimport './graphics-list.scss';\n\nexport default ({\n  items,\n}) => (\n    <ul\n      className=\"graphics-list\"\n      data-component=\"molecules/graphics-list\"\n    >\n      {\n        items.map(\n          item => <li\n            key={item.imgSrc}\n            className=\"graphics-list-item\"\n          >\n            <Link to={item.to}>\n              <Image\n                src={item.imgSrc}\n                alt={item.title}\n                classNamePrefix={'graphics-list-item'}\n                caption={item.title}\n              ></Image>\n            </Link>\n          </li>,\n        )\n      }\n    </ul>\n\n);\n","import React, { useState, useEffect } from 'react';\n\nimport CopyText from '~/components/atoms/copy-text';\nimport LeporelloGraphicItem from '~/components/molecules/leporello-graphic-item';\nimport GraphicsList from '~/components/molecules/graphics-list';\n\n\nimport './leporello-graphic-reprints-item.scss';\n\nexport default ({\n  graphic,\n  description = '          Hier wäre es gut, wenn wir den Text dynmaisch aus einer Datei ziehen könnten, in der so ein paar Helpertexte und die Headlines drin sind. (zweisprachig)',\n  className = '',\n}) => {\n  /* Number of initial visible reprint items */\n  const reprintItemsLimit = 1;\n  const hasMoreReprintItemsThanLimit = graphic.references.length > reprintItemsLimit;\n\n  /* Map reprints */\n  const reprintItems = graphic.references.map((reprintItem) => {\n    const item = reprintItem.ref;\n\n    return {\n      title: item.owner || '',\n      to: `/${item.langCode}/${item.slug}`,\n      imgSrc: (item && item.image && item.image.small),\n    };\n  });\n\n  const [additionalClassNames, setAdditionalClassNames] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [limitReprintItems, setLimitedReprintItems] = useState(!isOpen);\n\n  /* React on addtional classnames changes */\n  useEffect(() => {\n    setAdditionalClassNames([\n      ...className.split(' '),\n    ]);\n  }, [className, isOpen]);\n\n  /* React on open / close toggle */\n  useEffect(() => {\n    setLimitedReprintItems(!isOpen);\n  }, [isOpen]);\n\n  return (\n    <LeporelloGraphicItem\n      className={ `leporello-graphic-reprints-item ${additionalClassNames.join(' ')}` }\n      data-component=\"organisms/leporello-graphic-reprints-item\"\n      initiallyOpen={ isOpen }\n      onToggle={ setIsOpen }\n      visibleToggler={ hasMoreReprintItemsThanLimit }\n    >\n      <div className=\"leporello-graphic-reprints-item-intro\">\n        <h2 className=\"chapter\">Abzüge</h2>\n        <h3 className=\"headline\">1. Zustand</h3>\n        <CopyText\n          text={ description }\n        />\n      </div>\n      <div className=\"leporello-graphic-reprints-item-list\">\n\n\n        <GraphicsList\n          items={\n            limitReprintItems\n              ? reprintItems.slice(0, reprintItemsLimit)\n              : reprintItems\n          }\n        />\n      </div>\n\n    </LeporelloGraphicItem>\n  );\n};\n","import LeporelloGraphicReprintsItem from './leporello-graphic-reprints-item';\n\nexport default LeporelloGraphicReprintsItem;\n","import React, { useState, useEffect } from 'react';\n\nimport LeporelloGraphicItem from '~/components/molecules/leporello-graphic-item';\nimport GraphicsList from '~/components/molecules/graphics-list';\n\nimport './leporello-graphic-related-works-item.scss';\n\nexport default ({\n  className = '',\n}) => {\n  const [additionalClassNames, setAdditionalClassNames] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n\n  /* React on additional classnames change and open / close toggle */\n  useEffect(() => {\n    setAdditionalClassNames([\n      ...className.split(' '),\n      /*\n        We add an extra classname, if the leporello item was opened,\n        to be able to react to it on style level\n      */\n      ...(isOpen ? ['-related-works-is-open'] : []),\n    ]);\n  }, [className, isOpen]);\n\n  return (\n    <LeporelloGraphicItem\n      className={ `leporello-graphic-related-works-item ${additionalClassNames.join(' ')}` }\n      data-component=\"organisms/leporello-graphic-related-works-item\"\n      initiallyOpen={ isOpen }\n      onToggle={ setIsOpen }\n    >\n      <div className=\"columns\">\n        <div className=\"column is-one-quarter intro\">\n          <p className=\"description\">\n            Als Gregor Samsa eines Morgens aus unruhigen Träumen erwachte,\n            fand er sich in seinem Bett zu einem ungeheueren Ungeziefer verwandelt.\n            Und es war ihnen wie eine Bestätigung ihrer neuen Träume und guten Absichten,\n            als am Ziele ihrer Fahrt die Tochter als erste sich erhob und ihren jungen Körper\n            dehnte.\n          </p>\n        </div>\n\n        <div className=\"column\">\n          <GraphicsList items={ [] } />\n        </div>\n      </div>\n    </LeporelloGraphicItem>\n  );\n};\n","import LeporelloGraphicRelatedWorksItem from './leporello-graphic-related-works-item';\n\nexport default LeporelloGraphicRelatedWorksItem;\n","// src/templates/page.js\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nimport Navigation from '~/components/molecules/navigation';\nimport Leporello from '~/components/atoms/leporello';\nimport LeporelloGraphicDetailsItem from '~/components/organisms/leporello-graphic-details-item';\nimport LeporelloGraphicReprintsItem from '~/components/organisms/leporello-graphic-reprints-item';\nimport LeporelloGraphicRelatedWorksItem from '~/components/organisms/leporello-graphic-related-works-item';\n\n\nconst PageTemplate = ({ pageContext }) => {\n  const graphic = pageContext;\n\n  const title = (graphic.titles[0] && graphic.titles[0].title) || '';\n\n  return (\n    <div\n      className=\"page\"\n      data-template=\"page\"\n    >\n      <Helmet>\n        <title>Grafiken | { title } | Virtual</title>\n      </Helmet>\n\n      <Navigation />\n\n      <section className=\"body\">\n        <Leporello>\n          <LeporelloGraphicDetailsItem graphic={ graphic } />\n          <LeporelloGraphicReprintsItem graphic={ graphic } />\n          <LeporelloGraphicRelatedWorksItem graphic={ graphic } />\n        </Leporello>\n      </section>\n    </div>\n  );\n};\n\nexport default PageTemplate;\n"],"sourceRoot":""}